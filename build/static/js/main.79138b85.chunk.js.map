{"version":3,"sources":["components/Steps.js","providers/AppStateProvider/context.js","providers/AppStateProvider/provider.js","providers/CasesProvider/context.js","services/cases_subgraph/queries.js","providers/CasesProvider/provider.js","components/BackendProvider.js","components/Title.js","helpers/general-helpers.js","components/VerticalBarChart.js","components/PieChart.js","components/Shared/LoadingText.js","providers/AppStateProvider/use.js","components/Dashboard.js","components/MapScrollZoomOnFocus.js","providers/CasesProvider/use.js","components/CaseCard.js","components/Shared/ModalTitle.js","components/CaseCardList.js","components/Map.js","components/Page.js","pages/Landing.js","components/DropZone.js","components/Shared/controls/Input.js","components/Shared/controls/RadioGroup.js","components/Shared/controls/Select.js","components/Shared/controls/Checkbox.js","components/Shared/controls/CheckboxGroup.js","components/Shared/controls/DatePicker.js","components/Shared/controls/Button.js","components/Shared/controls/Controls.js","components/DenseTable.js","services/cases_backend/queries.js","services/users/queries.js","hooks/useBulkReport.js","hooks/useReport.js","pages/Admin.js","hooks/useRestart.js","pages/Info.js","components/Shared/InfoDialog.js","components/Shared/DisplayValue.js","components/Shared/EmailContact.js","components/Shared/EntityContact.js","pages/Confirmation.js","components/Shared/useForm.js","components/Shared/ActionDialog.js","components/Shared/HorizontalStepper.js","components/ReportCaseFormPart1.js","components/ReportCaseFormPart2.js","components/ReportCaseForm.js","pages/Report.js","components/Shared/Header.js","components/Shared/Footer.js","themes/colors.js","themes/smart.js","App.js","reportWebVitals.js","index.js"],"names":["steps","content","src","locale","skip","next","back","last","styles","options","arrowColor","backgroundColor","textColor","width","placement","disableBeacon","target","floaterProps","disableAnimation","spotlightPadding","title","scrollOffset","appStateContext","createContext","AppStateProvider","children","appState","useState","region","setRegion","useAppStateProvider","Provider","value","casesInitialContext","loading","error","cases","refetch","CasesContext","GET_CASES","gql","GET_FILTERED_CASES","GET_STAT","CasesProvider","useQuery","data","refetchFn","BackendProvider","props","httpLink","createHttpLink","uri","config","production","client","ApolloClient","link","cache","InMemoryCache","ApolloProvider","Title","component","variant","color","gutterBottom","other","type","Typography","regionRenderNameToValue","val","Object","keys","regionToRegionRenderName","map","key","typeRenderNameToValue","typeToTypeRenderName","professionRenderNameToValue","profession","professionToProfessionRenderName","genderRenderNameToValue","gender","genderToGenderRenderName","ageRangeRenderNameToValue","ageRange","ageRangeToAgeRangeRenderName","experienceRenderNameToValue","experience","experienceToExperienceRenderName","createDataObjectFromArrays","values","labels","i","length","push","name","createOptionsObjectFromArrays","label","toPercentages","fixed","sumReducer","accumulator","curr","sum","reduce","toFixed","filterCasesByRegion","filteredCases","c","useStyles","makeStyles","theme","chartContainer","height","ticksContainer","marginTop","marginBottom","tick","display","margin","lineHeight","renderCustomizedLabel","percent","x","y","fill","position","VerticalBarChart","useTheme","classes","Grid","container","className","justify","item","xs","ResponsiveContainer","BarChart","layout","top","right","left","bottom","barGap","XAxis","domain","hide","YAxis","dataKey","Bar","barSize","palette","primary","main","background","LabelList","d","COLORS","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","index","radius","cos","sin","textAnchor","dominantBaseline","PieChart","Pie","labelLine","entry","Cell","Legend","align","verticalAlign","LoadingText","Skeleton","useAppState","useContext","dashboardContainer","regionTitle","fontSize","fontWeight","totlaNumberOfReports","typeOfReport","alignItems","dInlineBlock","chip","borderRadius","fixedHeightItem","chartTitle","border","padding","Dashboard","variables","regionId","regionToId","message","stat","md","lg","xl","spacing","casesByRegion","clsx","categories","types","Chip","casesByType","indexOf","style","chipColors","text","light","Box","professions","casesByProfession","genders","casesByGender","ageRanges","casesByAgeRange","MapScrollZoomOnFocus","useMapEvents","focus","scrollWheelZoom","enable","blur","disable","useCases","ExpandMore","styled","expand","IconButton","transform","marginLeft","transition","transitions","create","duration","shortest","flexDirection","cardTitle","opacity","CaseCard","caseDetails","expandedProp","React","expanded","setExpanded","CardContent","id","CardActions","disableSpacing","companyName","caseType","onClick","Collapse","in","timeout","unmountOnExit","paragraph","description","root","paddingLeft","closeButton","grey","ModalTitle","onClose","disableTypography","maxWidth","zIndex","overflowY","CaseCardList","open","Card","Map","listState","setListState","clusterClicked","cluster","r","child","parent","JSON","stringify","findChildObject","latlng","regionToLatLng","console","log","mapBounds","bounds","lat","lng","icons","markersByType","L","icon","MapContainer","zoom","zoomControl","TileLayer","attribution","url","spiderfyOnMaxZoom","disableClusteringAtZoom","zoomToBoundsOnClick","Marker","eventHandlers","click","ZoomControl","appBarSpacer","mixins","toolbar","minHeight","Page","CssBaseline","Container","Landing","highlight","DropZone","over","setOver","setDataEntries","setDataHeaders","onDragEnter","e","preventDefault","onDragLeave","onDragOver","onDrop","Array","from","dataTransfer","files","filter","file","forEach","a","parse","shift","field","RadioGroup","onChange","items","labelTitle","required","FormControl","FormLabel","row","FormControlLabel","control","Radio","Select","InputLabel","onOpen","document","querySelectorAll","MenuItem","opt","Checkbox","checked","msg","converToDefEventParam","CheckboxGroup","FormGroup","DatePicker","utils","DateFnsUtils","disableToolbar","inputVariant","format","date","Button","Controls","Input","TextField","onFocus","parentNode","childNodes","onBlur","size","DenseTable","headers","dataset","TableContainer","Table","sx","minWidth","TableHead","TableRow","header","TableCell","TableBody","set","slice","REPORT","RESTART","USERS","ADD_USER","DELETE_USERS","useBulkReport","setData","setLoading","setError","reportsState","setReportsState","casesToReport","setCasesToReport","currentReportIndex","setCurrentReportIndex","lastReportIndex","setLastReportIndex","useMutation","sendReport","caseReported","caseLoading","caseError","addUser","addedUser","userLoading","userError","useEffect","_data","caseToReport","terms","user","email","reportCase","useReport","currentData","currentLoading","currentError","nextState","inputCasesToReport","mainGrid","formButton","boxShadow","flexVerticalAlignCenter","mb","mt","loadingSpinner","gridAutoFlow","justifyItems","loadingSpinnerBulkReport","secondary","loadingText1","textAlign","loadingText2","loadingText3","flexColumn","justifyContent","Admin","setCases","bulkReportUsed","setBulkReportUsed","casesHeaders","setCasesHeaders","RESTART_CASES","sendRestartCases","restartedCases","RESTART_USERS","sendRestartUsers","restartedUsers","restart","connected","deleteUsers","useRestart","restartPrototype","restartData","restartLoading","restartError","bulkReport","CircularProgress","Warning","Check","Error","concat","casesWithState","getCasesWithReportState","caption","grid","Info","InfoDialog","contentText","closeButtonText","Dialog","DialogContent","DialogContentText","DialogActions","autoFocus","marginRight","DisplayValue","anchor","textDecoration","EmailContact","href","imgContainer","img","objectFit","EntityContact","styleClass","heading2","heading3","captionOrg","smallCaption","successMsgContainer","numbersContainer","contactList","listStyle","entity","Confirmation","refetchCases","report","location","state","filas","setRows","doc","GoogleSpreadsheet","useServiceAccountAuth","client_email","process","private_key","loadInfo","sheet","sheetsByIndex","getRows","rows","readSpreadsheet","regionQueryFilter","professionQueryFilter","usersQueryFilter","OR","loadingCasesByRegion","errorCasesByRegion","loadingCasesByProfession","errorCasesByProfession","dataUsers","loadingUsers","errorUsers","nombre_entidad","url_imagen","orgsCiudad","comunidad_autonoma","includes","orgsProfesion","profesion_es","userMails","users","u","to","RouterLink","Form","onSubmit","dialogContent","Transition","forwardRef","ref","Slide","direction","DialogTitle","ActionDialog","primaryActionButton","primaryActionHandler","undefined","secondaryActionButton","secondaryActionHandler","TransitionComponent","disableScrollLock","HorizontalStepper","activeStep","Stepper","Step","StepLabel","requiredAdvice","note","spacer","ReportCaseFormPart1","handleInputChange","placeholder","multiline","inputProps","maxLength","fullWidth","paddingTop","paddingBottom","smallField","w100","ReportCaseFormPart2","regions","sort","b","localeCompare","experiences","authContact","stepper","buttonRow","initialFValues","ReportCaseForm","setActiveStep","setValues","submit","queryFcn","payload","err","useForm","reportedCase","loadingCase","errorCase","loadingUser","errorUser","showInfoDialog","setShowInfoDialog","showConfirmationDialog","setShowConfirmationDialog","infoDialogMsg","setInfoDialogMsg","infoDialogTitle","setInfoDialogTitle","validatePart1","event","validatePart2","match","pathname","step","reportAction","renderActiveStep","Report","headerMenuLinks","cta","borderTop","borderBottom","logoAndTitleContainer","logo","logoButton","titleAndDescription","dark","menuButton","callToAction","drawerContainer","Header","mobileView","drawerOpen","setState","setResponsiveness","window","innerWidth","prevState","addEventListener","removeEventListener","getDrawerChoices","Link","customLogo","TitleAndDescription","getMenuButtons","AppBar","Toolbar","edge","Drawer","disableGutters","flexRow","flexRowPT","flexCol","footer","footerContent","logos","info","githubIcon","Footer","red","createMuiTheme","success","typography","fontsize","h1","h2","h3","h4","h5","h6","App","setnotDone","localStorage","getItem","setItem","ThemeProvider","exact","path","continuous","callback","status","STATUS","FINISHED","SKIPPED","scrollToFirstStep","showProgress","showSkipButton","run","buttonClose","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.79138b85.chunk.js","sourcesContent":["const logoSrc = './assets/ico-logo.svg'\n\nexport const steps= [\n    {\n      content:(\n        <div>\n          <img src={logoSrc} />\n          <h4>Bienvenida/o al</h4>\n          <h2>Observatorio de la Precariedad en el Sector Cultural</h2>\n          <p>Aquí podrás encontrar denuncias anónimas a irregularidades respecto a pagos de empresas españolas a trabajadoras/es del sector cultural agrupadas por Comunidades Autónomas.</p>\n          <p>Esta iniciativa pretende mostrar cuál es la realidad del sector cultural en España y convertirse en un espacio de autodefensa y apoyo mutuo para profesionales autónomos</p>\n          <p>✊🏻 ✊🏾 ✊🏿</p>\n        </div>\n      ),\n      locale: { skip: <strong aria-label=\"skip\">Cerrar</strong>, next: 'Siguiente', back: 'Atrás' , last: 'Fin' },\n      styles: {\n        options: {\n          arrowColor: '#202020',\n          backgroundColor: '#202020 ',\n          textColor: '#FFFFFF',\n          width: 450,\n        },\n      },\n      placement: 'center',\n      disableBeacon: true,\n      target: 'body',\n    },\n\n    {\n      content: <p>Haciendo click en los marcadores del mapa podrás ver un listado con los detalles de las denuncias que profesionales como tú han emitido contra empresas que han incurrido en irregularidades en sus contratos o pagos.</p>,\n      floaterProps: {\n        disableAnimation: true,\n      },\n      styles: {\n        options: {\n          arrowColor: '#202020',\n          backgroundColor: '#202020 ',\n          textColor: '#FFFFFF',\n        },\n      },  \n      locale: { skip: <strong aria-label=\"skip\">Cerrar</strong>, next: 'Siguiente', back: 'Atrás'  },\n\n      spotlightPadding: 200,\n      target: '.map div',\n      title: 'Mapa interactivo',\n      scrollOffset: 0,\n    },\n  \n    {\n      content: (\n        <p>Aquí podrás ver los datos que estamos recogiendo de las denuncias realizadas por tipo de abuso, profesión, género o edad.</p>\n      ),\n      placement: 'top',\n      //spotlightPadding: 20,\n      scrollOffset: 50,\n      styles: {\n        options: {\n          arrowColor: '#202020',\n          width: 300,\n          backgroundColor: '#202020 ',\n          textColor: '#FFFFFF',          \n        },\n\n      },\n      locale: { skip: <strong aria-label=\"skip\">Cerrar</strong>, next: 'Siguiente', back: 'Atrás'  },\n      target: '.map + .MuiContainer-root div',\n      title: 'Panel de datos',\n    },\n\n    {\n      content: (\n        <div>\n          <p>Desde estos enlaces podrás obtener información o reportar tu caso mediante un formulario para incorporarlo a nuestra base de datos. Al finalizar el proceso, tendrás acceso a otras personas anónimas que se han encontrado en la misma situación que tú para contactarlas y que te aconsejen.</p>\n          <p>También encontrarás algunas entidades que pueden ayudarte</p>\n        </div>\n        ),\n      placement: 'bottom',\n      locale: { skip: <strong aria-label=\"skip\">Cerrar</strong>, next: 'Siguiente', back: 'Atrás' , last: 'Fin'},\n\n      styles: {\n        options: {\n          arrowColor: '#202020',\n          backgroundColor: '#202020 ',\n          textColor: '#FFFFFF',\n        },\n      },\n      target: '.report div',\n      title: 'Cuéntanos tu caso',\n    },\n  ];\n","import { createContext } from 'react'\n\n/** For more details on\n * `appStateContext`, `ProvideAppState`, `useAppState` and `useProvideAppState`\n * refer to: https://usehooks.com/useAuth/\n */\nexport const appStateContext = createContext()\n","import React, { useState } from 'react'\nimport { appStateContext } from './context'\n\nfunction useAppStateProvider() {\n    // Set initial value of region and create state\n    const [region, setRegion] = useState('spain')\n\n    return {\n        region,\n        setRegion,\n    }\n}\n\nexport function AppStateProvider({ children }) {\n    const appState = useAppStateProvider()\n    return (\n        <appStateContext.Provider value={appState}>\n            {children}\n        </appStateContext.Provider>\n    )\n}\n","import { createContext } from 'react'\n\nconst casesInitialContext = {\n    loading: false,\n    error: '',\n    cases: [],\n    refetch: () => {}\n}\n\nconst CasesContext = createContext(casesInitialContext)\n\nexport default CasesContext\n","import { gql } from '@apollo/client'\n\nexport const GET_CASES = gql`\n    query GetCases {\n        cases {\n            id\n            companyName\n            caseType\n            description\n            region\n            profession\n            gender\n            ageRange\n            experience\n        }\n    }\n`\n\nexport const GET_FILTERED_CASES = gql`\n    query getCases($filter: Case_filter){\n        cases(where: $filter ) {\n        id\n        companyName\n        caseType\n        description\n        region\n        profession\n        gender\n        ageRange\n        experience\n        }\n    }\n`\n\nexport const GET_STAT = gql`\n    query GetStat($regionId: ID!) {\n        stat(id: $regionId) {\n            regionName\n            casesByRegion\n            casesByType\n            casesByProfession\n            casesByGender\n            casesByAgeRange\n        }\n    }\n`\n\n","import CasesContext from './context'\nimport { useQuery } from '@apollo/client'\nimport { GET_CASES } from '../../services/cases_subgraph/queries'\n\nexport function CasesProvider({ children }) {\n    const { data, loading, error, refetch: refetchFn } = useQuery(GET_CASES)\n\n    const cases = data ? data.cases : []\n\n    return (\n        <CasesContext.Provider value={{ loading, error, cases, refetch: () => refetchFn(GET_CASES) }}>\n            {children}\n        </CasesContext.Provider>\n    )\n}\n","import {\n    ApolloClient,\n    createHttpLink,\n    InMemoryCache,\n    ApolloProvider,\n} from '@apollo/client'\nimport config from '../config.json'\n\nfunction BackendProvider(props) {\n    const { children } = props\n\n    // const httpLink = createHttpLink({\n    //     uri: config.gql.localhost,\n    // })\n\n    const httpLink = createHttpLink({\n        uri: config.gql.production,\n    })\n\n    const client = new ApolloClient({\n        link: httpLink,\n        cache: new InMemoryCache(),\n    })\n\n    return <ApolloProvider client={client}>{children}</ApolloProvider>\n}\n\nexport default BackendProvider\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Title(props) {\n    const { component, variant, color, gutterBottom, type, ...other } = props\n\n    return (\n        <Typography\n            component={component ? component : variant || 'h2'}\n            variant={variant ? variant : component || 'h2'}\n            color={color || 'primary'}\n            gutterBottom={gutterBottom || false}\n            {...other}\n        >\n            {props.children}\n        </Typography>\n    )\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n}\n","import config from '../data/config.json'\n\nexport function regionRenderNameToValue(region) {\n    // console.log(\"[regionRenderNameToValue] Searching for region...\")\n    // console.log(region)\n\n    let val = ''\n    Object.keys(config.regionToRegionRenderName).map( key => {\n        // console.log(key)\n        if(config.regionToRegionRenderName[key] === region)\n            val = key\n    })\n    // console.log(val)\n    return val\n}\n\nexport function typeRenderNameToValue(type) {\n    let val = ''\n    Object.keys(config.typeToTypeRenderName).map( key => {\n        if(config.typeToTypeRenderName[key] === type)\n            val = key\n    })\n    return val\n}\n\nexport function professionRenderNameToValue(profession) {\n    let val = ''\n    Object.keys(config.professionToProfessionRenderName).map( key => {\n        if(config.professionToProfessionRenderName[key] === profession)\n            val = key\n    })\n    return val\n}\n\nexport function genderRenderNameToValue(gender) {\n    let val = ''\n    Object.keys(config.genderToGenderRenderName).map( key => {\n        if(config.genderToGenderRenderName[key] === gender)\n            val = key\n    })\n    return val\n}\n\nexport function ageRangeRenderNameToValue(ageRange) {\n    let val = ''\n    Object.keys(config.ageRangeToAgeRangeRenderName).map( key => {\n        if(config.ageRangeToAgeRangeRenderName[key] === ageRange)\n            val = key\n    })\n    return val\n}\n\nexport function experienceRenderNameToValue(experience) {\n    let val = ''\n    Object.keys(config.experienceToExperienceRenderName).map( key => {\n        if(config.experienceToExperienceRenderName[key] === experience)\n            val = key\n    })\n    return val\n}\n\n\nexport function capitalizeFirstLetter(word) {\n    if (typeof word === 'string')\n        return word.charAt(0).toUpperCase() + word.slice(1)\n    else return ''\n}\n\nexport function getRandomElement(elements) {\n    return elements[Math.floor(Math.random() * elements.length)]\n}\n\nexport function buildMapById(elements, idField = 'id') {\n    return elements.reduce((map, currElement) => {\n        const id = currElement[idField]\n        map.set(id, currElement)\n        return map\n    }, new Map())\n}\n\nexport function createDataObjectFromArrays(keys, values, labels) {\n    let data = []\n    for (let i = 0; i < keys.length; i++) {\n        data.push({\n            key: keys[i],\n            value: +values[i], // Cast to number with unary operator +\n            name: labels[keys[i]],\n        })\n    }\n    return data\n}\n\nexport function createOptionsObjectFromArrays(values, labels) {\n    let options = []\n    for (let i = 0; i < values.length; i++) {\n        options.push({\n            value: values[i],\n            label: labels[values[i]],\n        })\n    }\n    return options\n}\n\nexport function toPercentages(values, fixed = 2) {\n    let data = []\n    const sumReducer = (accumulator, curr) => accumulator + curr\n    const sum = values.reduce(sumReducer)\n    values.map(val => {\n        data.push(((val * 100) / sum).toFixed(fixed))\n    })\n    return data\n}\n\n// Finds if the child object is contained in the parent object, if the\n// child is found the key of the field is returned. If its\n// not found false is returned.\n// Parameters:\n// - child <Object> object to find\n// - parent <Object> object in which to search\nexport function findChildObject(child, parent) {\n    const keys = Object.keys(parent)\n    for (let i = 0; i < keys.length; i++) {\n        if (JSON.stringify(parent[keys[i]]) === JSON.stringify(child))\n            return keys[i]\n    }\n    return false\n}\n\n// Parameters:\n// - cases <Object> object in which to search\n// - region <String> value of the region field to be matched\nexport function filterCasesByRegion(cases, region) {\n    let filteredCases = []\n    cases.map(c => {\n        if (c.region != '' && c.region === region) {\n            filteredCases.push(c)\n        }\n    })\n    return filteredCases\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Bar, XAxis, YAxis, ResponsiveContainer, BarChart , LabelList} from 'recharts'\nimport { useTheme } from '@material-ui/styles'\nimport { Grid, Typography } from '@material-ui/core'\nimport { createDataObjectFromArrays } from '../helpers/general-helpers'\n\nconst useStyles = makeStyles(theme => ({\n    chartContainer: {\n        height: '100%',\n    },\n    ticksContainer: {\n        '& :first-child': {\n            marginTop: '27px',\n        },\n        '& :last-child': {\n            marginBottom: 0,\n        },\n    },\n    tick: {\n        display: 'block',\n        margin: '0 0 26px',\n        lineHeight: '20px',\n    },\n}))\n \nconst renderCustomizedLabel = (props, percent) => {\n    const { x, y, width, value } = props;\n  \n    return (\n        <g>\n        <text x={x + 10 + width } y={y + 15} fill=\"red\" position= \"right\" >\n        {`${value}%`}\n      </text>\n      </g>\n    );\n  };\n\n\n  export default function VerticalBarChart(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n    const { keys, values, labels, ...other } = props\n    const data = createDataObjectFromArrays(keys, values, labels)\n    return (\n        <Grid container className={classes.chartContainer} justify=\"center\">\n            <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height=\"100%\" {...other}>\n                    <BarChart\n                        layout=\"vertical\"\n                        data={data}\n                        margin={{\n                            top: 10,\n                            right: 60, // Sapce left at the right so the text of the label in the bars doesnt get cut\n                            left: 10,\n                            bottom: 10,\n                        }}\n                        barGap={2}\n                        \n                    >\n                        <XAxis type=\"number\" domain={[0, 100]} hide />\n                        <YAxis dataKey=\"key\" type=\"category\" hide />\n                        <Bar\n                            dataKey=\"value\"\n                            barSize={20}\n                            fill={theme.palette.primary.main}\n                            background={{ fill: '#E4E4E4' }}\n                           \n                        >\n                            <LabelList dataKey=\"value\" content={renderCustomizedLabel} />\n                        </Bar>\n                    </BarChart>\n                </ResponsiveContainer>\n            </Grid>\n            <Grid item className={classes.ticksContainer}>\n                {data.map(d => {\n                    return (\n                        <Typography\n                            component=\"span\"\n                            className={classes.tick}\n                            key={d.key + '-tick'}\n                        >\n                            {d.name}\n                        </Typography>\n                    )\n                })}\n            </Grid>\n        </Grid>\n    )\n}\n","import React from 'react'\nimport {\n    PieChart as RechartPieChart,\n    Pie,\n    Cell,\n    Legend,\n    ResponsiveContainer,\n} from 'recharts'\nimport { createDataObjectFromArrays } from '../helpers/general-helpers'\n\n// const data = [\n//   { name: 'Group A', value: 400 },\n//   { name: 'Group B', value: 300 },\n//   { name: 'Group C', value: 300 },\n//   { name: 'Group D', value: 200 },\n// ];\n\nconst COLORS = [\n    '#561314',\n    '#F9A49C',\n    '#FF5769',\n    '#A21212',\n    '#616472',\n    '#D8D8D8',\n]\nconst RADIAN = Math.PI / 180;\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }) => {\n    const radius = innerRadius + (outerRadius - innerRadius) * 1.2;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN) + 5;\n    const y = cy + radius * Math.sin(-midAngle * RADIAN) + 5;\n  \n    return (\n      <text x={x} y={y} fill={COLORS[index % COLORS.length]} textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n}; \n\nexport default function PieChart(props) {\n    const { keys, values, labels, ...other } = props\n    const data = createDataObjectFromArrays(keys, values, labels)\n    return (\n        <ResponsiveContainer width=\"100%\" {...other}>\n            <RechartPieChart>\n                <Pie\n                    data={data}\n                    dataKey=\"value\"\n                    cx=\"33.3%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={renderCustomizedLabel}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                >\n                    {data.map((entry, index) => (\n                        <Cell\n                            key={`cell-${index}`}\n                            fill={COLORS[index % COLORS.length]}\n                            \n                        />\n                    ))}\n                </Pie>\n                <Legend align=\"right\" verticalAlign=\"middle\" width=\"33.3%\" />\n            </RechartPieChart>\n        </ResponsiveContainer>\n    )\n}\n","\nimport React from 'react'\n\nimport Skeleton from '@mui/material/Skeleton';\n\n\nexport default function LoadingText({children}) {\n    return (\n        <div>\n            <Skeleton variant='text' >{children}</Skeleton>\n        </div>\n    )\n}\n\n\n","import { useContext } from 'react'\nimport { appStateContext } from './context'\n\nexport function useAppState() {\n    return useContext(appStateContext)\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Box, Chip, Paper, Grid, Typography, useTheme } from '@material-ui/core'\nimport Title from './Title'\nimport VerticalBarChart from './VerticalBarChart'\nimport PieChart from './PieChart'\nimport Skeleton from '@mui/material/Skeleton';\nimport LoadingText from './Shared/LoadingText';\nimport LoadingRectangle from './Shared/LoadingRectangle';\nimport { Pie } from 'recharts';\nimport { steps } from \"../components/Steps\";\nimport Joyride from \"react-joyride\";\n\nimport { useAppState } from '../providers/AppStateProvider/use'\nimport {\n    categories,\n    regionToId,\n    regionToRegionRenderName,\n    typeToTypeRenderName,\n    professionToProfessionRenderName,\n    genderToGenderRenderName,\n    ageRangeToAgeRangeRenderName,\n    chipColors,\n} from '../data/config.json'\nimport { useQuery } from '@apollo/client'\nimport { GET_STAT } from '../services/cases_subgraph/queries'\nimport { toPercentages } from '../helpers/general-helpers'\n\nconst useStyles = makeStyles(theme => ({\n    dashboardContainer: {\n        marginTop: '4rem',\n        marginBottom: '4rem',\n    },\n    regionTitle: {\n        fontSize: '3.5rem',\n        fontWeight: 'bold',\n    },\n    totlaNumberOfReports: {\n        fontSize: '1.75rem',\n    },\n    typeOfReport: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    dInlineBlock: {\n        display: 'inline-block',\n    },\n    chip: {\n        margin: '0 0 0 2rem',\n        fontSize: '1rem',\n        borderRadius: '5px',\n    },\n    fixedHeightItem: {\n        height: '25rem',\n    },\n    chartTitle: {\n        fontSize: '2.25rem',\n        fontWeight: '300',\n        lineHeight: '3rem',\n    },\n    chartContainer: {\n        height: '100%',\n        backgroundColor: 'rgba(238,238,238,0.4)',\n        border: '1px solid #DFDFDF',\n        padding: '1rem',\n    },\n    \n}))\n\nexport default function Dashboard() {\n    const theme = useTheme()\n    const classes = useStyles()\n    const { region } = useAppState()\n\n    const { data, loading, error } = useQuery(GET_STAT, {\n        variables: {\n            regionId: regionToId[region],\n        },\n    })\n\n\n\n    if (error) return <Typography>{error.message}</Typography>\n\n    const stat = data ? data.stat : {}\n    return (\n        <>\n        {loading ? (\n            <Grid\n            container\n            className={classes.dashboardContainer}\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            >\n                {/* loading for title */}\n                <LoadingText>\n                    <Grid item xs={12}>\n                        <Title\n                            component=\"h2\"\n                            variant=\"h1\"\n                            className={classes.regionTitle}\n                        >\n                            {regionToRegionRenderName[region]}\n                        </Title>\n                        <Typography className={classes.totlaNumberOfReports}>\n                        casos han denunciado abusos de empresas\n                        o entidades públicas en la zona.\n                    </Typography>\n                    </Grid>\n                </LoadingText>\n\n                {/* loading for type of abuse */}\n                <Skeleton variant='text' height={200} width={2000}></Skeleton>\n\n                {/* loading for graph 1 */}\n                \n                <Grid\n                    item\n                    xs={12}\n                    md={10}\n                    lg={8}\n                    xl={6}\n                    className={classes.fixedHeightItem}\n                >\n                    <Skeleton variant='rectangular' height={300} width={800} ></Skeleton>\n                </Grid>\n\n                \n                {/* loading for graph 2 */}\n                \n                <Grid\n                    item\n                    xs={12}\n                    md={6}\n                    lg={4}\n                    xl={3}\n                    className={classes.fixedHeightItem}\n                >\n                    <Skeleton variant='rectangular' height={300} width={\"100%\"} ></Skeleton>\n\n                </Grid>\n                \n                {/* loading for graph 3 */}\n                \n                <Grid\n                    item\n                    xs={12}\n                    md={6}\n                    lg={4}\n                    xl={3}\n                    className={classes.fixedHeightItem}\n                >\n                    <Skeleton variant='rectangular' height={300} width={500} ></Skeleton>\n\n                </Grid>\n            </Grid>\n        ) : (\n            <Grid\n                container\n                className={classes.dashboardContainer}\n                spacing={4}\n                justify=\"flex-start\"\n                alignItems=\"center\"\n            >\n                    <Grid item xs={12}>\n                        <Title\n                            component=\"h2\"\n                            variant=\"h1\"\n                            className={classes.regionTitle}\n                        >\n                            {regionToRegionRenderName[region]}\n                        </Title>\n                        <Typography className={classes.totlaNumberOfReports}>\n                            {stat.casesByRegion} casos han denunciado abusos de empresas\n                            o entidades públicas en la zona.\n                        </Typography>\n                    </Grid>                                        \n                    <Grid item xs={12} className={classes.typeOfReport}>\n                        <Title\n                            component=\"h2\"\n                            variant=\"h2\"\n                            className={clsx(classes.dInlineBlock, classes.chartTitle)}\n                        >\n                            TIPO DE ABUSO\n                        </Title>\n                        {categories.types.map((key, i) => {\n                            return (\n                                <Chip\n                                    label={\n                                        typeToTypeRenderName[key] +\n                                        ' ' +\n                                        // Get the stats based in the position in the array\n                                        stat.casesByType[categories.types.indexOf(key)]\n                                    }\n                                    className={classes.chip}\n                                    style={{\n                                        backgroundColor: chipColors[key],\n                                        color: theme.palette.text.light,\n                                    }}\n                                    key={key + 'chip'}\n                                />\n                            )\n                        })}\n                    </Grid>\n                \n\n                {/* Profession chart */}\n                <Grid\n                    item\n                    xs={12}\n                    md={10}\n                    lg={8}\n                    xl={6}\n                    className={classes.fixedHeightItem}\n                >\n                    <Title\n                        component=\"h2\"\n                        variant=\"h2\"\n                        className={classes.chartTitle}\n                    >\n                        PROFESIÓN\n                    </Title>\n                    <Box className={classes.chartContainer}>\n                        <VerticalBarChart\n                            keys={categories.professions}\n                            values={toPercentages(stat.casesByProfession)}\n                            labels={professionToProfessionRenderName}\n                        />\n                    </Box>\n                </Grid>\n                {/* Gender chart */}\n                <Grid\n                    item\n                    xs={12}\n                    md={6}\n                    lg={4}\n                    xl={3}\n                    className={classes.fixedHeightItem}\n                >\n                    <Title\n                        component=\"h2\"\n                        variant=\"h2\"\n                        className={classes.chartTitle}\n                    >\n                        GÉNERO\n                    </Title>\n                    <Box className={classes.chartContainer}>\n                        <PieChart\n                            keys={categories.genders}\n                            values={toPercentages(stat.casesByGender)}\n                            labels={genderToGenderRenderName}\n                        />\n                    </Box>\n                </Grid>\n                {/* Age range chart */}\n                <Grid\n                    item\n                    xs={12}\n                    md={6}\n                    lg={4}\n                    xl={3}\n                    className={classes.fixedHeightItem}\n                >\n                    <Title\n                        component=\"h2\"\n                        variant=\"h2\"\n                        className={classes.chartTitle}\n                    >\n                        EDAD\n                    </Title>\n                    <Box className={classes.chartContainer}>\n                        <PieChart\n                            keys={categories.ageRanges}\n                            values={toPercentages(stat.casesByAgeRange)}\n                            labels={ageRangeToAgeRangeRenderName}\n                        />\n                    </Box>\n                </Grid>\n            </Grid>\n        )}\n        </>\n    )\n}\n","import { useMapEvents } from 'react-leaflet'\n\n\nconst MapScrollZoomOnFocus = (props) => {\n    const { children } = props\n    const map = useMapEvents({\n        focus:  () => {\n            map.scrollWheelZoom.enable()\n        },\n        blur: () => {\n            map.scrollWheelZoom.disable()\n        }     \n    })\n\n    return (\n        children\n    )             \n}\n\nexport default MapScrollZoomOnFocus","import { useContext } from 'react'\nimport CasesContext from './context'\n\nexport default function useCases() {\n    return useContext(CasesContext)\n}\n","import React from 'react'\nimport { styled } from '@mui/material/styles'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport {\n    Card,\n    CardContent,\n    Typography,\n    Chip,\n    IconButton,\n    Collapse,\n    CardActions,\n} from '@material-ui/core'\nimport { typeToTypeRenderName, chipColors } from '../data/config.json'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\nimport config from '../data/config.json'\n\nconst ExpandMore = styled(props => {\n    const { expand, ...other } = props\n    return <IconButton {...other} />\n})(({ theme, expand }) => ({\n    transform: !expand ? 'rotate(0deg)' : 'rotate(180deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n    }),\n}))\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n        padding: '1rem',\n        borderRadius: '5px',\n        backgroundColor: '#fff',\n        marginBottom: '2rem',\n    },\n    cardTitle: {\n        padding: '0.5rem',\n    },\n    name: {\n        display: 'block',\n    },\n    profession: {\n        opacity: '0.5',\n        marginTop: '0.2rem',\n    },\n    chip: {\n        fontSize: '0.9rem',\n        borderRadius: '5px',\n        marginBottom: '0.5rem',\n    },\n}))\n\nexport default function CaseCard(props) {\n    const classes = useStyles()\n    const theme = useTheme()\n    const { caseDetails, expandedProp } = props\n    const [expanded, setExpanded] = React.useState(expandedProp)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Card className={classes.container}>\n            <CardContent className={classes.cardTitle}>\n                <Typography variant=\"h4\" className={classes.name}>\n                    Persona {caseDetails.id}\n                </Typography>\n                <Typography variant=\"h4\" className={classes.profession}>\n                    {config.professionToProfessionRenderName[caseDetails.profession]}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <Chip\n                    label={caseDetails.companyName}\n                    className={classes.chip}\n                />\n                <Chip\n                    label={typeToTypeRenderName[caseDetails.caseType]}\n                    className={classes.chip}\n                    style={{\n                        marginLeft: theme.spacing(1),\n                        backgroundColor: chipColors[caseDetails.caseType],\n                        color: theme.palette.text.light,\n                    }}\n                />\n                <ExpandMore\n                    expand={expanded}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                >\n                    <ExpandMoreIcon />\n                </ExpandMore>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    <Typography paragraph>{caseDetails.description}</Typography>\n                </CardContent>\n            </Collapse>\n        </Card>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n    Typography,\n    IconButton,\n    DialogTitle as MuiDialogTitle,\n    Grid\n} from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(3),\n        paddingLeft: 0,\n        position: 'sticky',\n        top: 0,     \n    },\n    closeButton: {\n        position: 'absolute',\n        right: -theme.spacing(2),\n        top: 0,\n        color: theme.palette.grey[500],\n    },\n    container: {\n        position: 'absolute',\n        top: '0rem',\n        left: '0rem',\n        height: '100%',\n        width: '100%',\n        backgroundColor: '#fff',\n        borderRadius: '0px',\n        padding: '2.5rem',\n    },\n\n}))\n\nconst ModalTitle = props => {\n    const { root, closeButton, container } = useStyles()\n    const { children, onClose, ...other } = props\n    return (\n        <MuiDialogTitle disableTypography className={root} {...other}>\n            <Grid  className = {container}>\n                <Typography variant=\"h3\">{children}</Typography>\n                {onClose ? (\n                    <IconButton\n                        aria-label=\"close\"\n                        className={closeButton}\n                        onClick={onClose}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                ) : null}\n            </Grid>\n        </MuiDialogTitle>\n    )\n}\n\nexport default ModalTitle\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Card, Grid } from '@mui/material'\nimport CaseCard from './CaseCard'\nimport ModalTitle from './Shared/ModalTitle'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        position: 'absolute',\n        top: '1rem',\n        left: '1rem',\n        height: 'calc(100% - 2rem)',\n        width: '33%',\n        maxWidth: '400px',\n        backgroundColor: '#fff',\n        borderRadius: '5px',\n        padding: '0rem 2rem 2rem',\n        zIndex: 400,\n        overflowY: 'scroll !important',\n        \n    },\n}))\n\nexport default function CaseCardList(props) {\n    const classes = useStyles()\n    const { title, cases, open, onClose } = props\n\n    if (!open) return <></>\n\n    return (\n        <Card className={classes.container}>\n            <ModalTitle onClose={onClose}>{title}</ModalTitle>\n            \n            {cases.map((c,i) => {\n                \n                if(c.region != \"\" && c.description != \"\"){                \n                    return <CaseCard caseDetails={c} expandedProp={true} key={`casecard-${c.id}`} />\n            }})}\n        </Card>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n    MapContainer,\n    TileLayer,\n    Marker,\n    ZoomControl,\n} from 'react-leaflet'\nimport MapScrollZoomOnFocus from './MapScrollZoomOnFocus'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport useCases from '../providers/CasesProvider/use'\nimport { regionToLatLng, markersByType } from '../data/config.json'\nimport { Typography } from '@material-ui/core'\nimport { useAppState } from '../providers/AppStateProvider/use'\nimport Skeleton from '@mui/material/Skeleton';\nimport {\n    findChildObject,\n    filterCasesByRegion,\n} from '../helpers/general-helpers'\nimport CaseCardList from './CaseCardList'\nimport { regionToRegionRenderName } from '../data/config.json'\n\n\nconst Map = props => {\n    const { ...other } = props\n    const { loading, error, cases } = useCases()\n    const { region, setRegion } = useAppState()\n    const [listState, setListState] = useState(false)\n    const clusterClicked = cluster => {\n\n        // Find region match by lat adn lng\n        const r = findChildObject(cluster.latlng, regionToLatLng)\n\n        // Update global state and open list of case cards\n        if (r) {\n            setRegion(r)\n            setListState(true)\n        } else {\n            console.log('<Map> No matching region found')\n            console.log(cluster)\n\n        }\n    }\n\n    if (loading) {\n        //return <Typography>Loading map...</Typography>\n        return (\n            <Skeleton variant='rectangular' height={600} width={2000}></Skeleton>\n            )\n\n    } else if (error) {\n        return <Typography>{error.message}</Typography>\n    } else if ( cases.length !== 0 && !loading ) {\n        \n        // Set map boundaries to inlcude all marker(cases)\n        let mapBounds = []\n        cases.map(c => {\n            if(c.region != \"\" && c.description != \"\"){\n                const bounds = regionToLatLng[c.region]\n                mapBounds.push([bounds.lat, bounds.lng])\n            }\n        })\n\n        // Set marker icons by type\n        let icons = {}\n        for (let type in markersByType) {\n            icons[type] = L.icon(markersByType[type])\n        }\n\n        return (\n            <MapContainer\n                bounds={mapBounds}\n                zoom={103}\n                scrollWheelZoom={false}\n                zoomControl={false}\n                {...other}\n            >\n                <TileLayer\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {/* Enable map controls on focus, disable on blur */}\n                <MapScrollZoomOnFocus>\n                    <MarkerClusterGroup \n                        onClick={clusterClicked}\n                        spiderfyOnMaxZoom={false}\n                        disableClusteringAtZoom={10}\n                        zoomToBoundsOnClick={true}\n                    >\n                        {cases.map(c => {\n                            if(c.region != \"\" && c.description != \"\"){\n                                const bounds = regionToLatLng[c.region]\n                                return (\n                                    <Marker\n                                        position={[bounds.lat, bounds.lng]}\n                                        eventHandlers={{\n                                            click: clusterClicked\n                                        }}\n                                        icon={icons[c.caseType]}\n                                        key={c.id + '-report'}\n                                    />\n                                )\n                            }\n                        })}\n                    </MarkerClusterGroup>\n                    <ZoomControl position=\"bottomright\" />\n                </MapScrollZoomOnFocus>\n                <CaseCardList\n                    title={`Casos reportados en ${regionToRegionRenderName[region]}`}\n                    cases={filterCasesByRegion(cases, region)}\n                    open={listState}\n                    onClose={() => {\n                        setListState(false)\n                    }}\n                />\n            </MapContainer>\n        )\n    } else {\n        return (<></>)\n    }\n}\n\nexport default Map","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline, Container } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    appBarSpacer: theme.mixins.toolbar,\n    main: {\n        minHeight: `calc(100vh - 136px)`\n    }\n}))\n\nexport default function Page(props) {\n    const classes = useStyles()\n    const { children, className, container=true, maxWidth } = props\n    \n    return container ? \n        (\n            <div>\n                <CssBaseline />\n                <main className={classes.main}>\n                    <div className={classes.appBarSpacer} />\n                    <Container maxWidth={maxWidth || \"lg\"} className={className}>\n                        {children}\n                    </Container>\n                </main>\n            </div>\n        )\n    :\n    (\n        <div>\n            <CssBaseline />\n            <main className={classes.main}>\n                <div className={classes.appBarSpacer} />\n                {children}\n            </main>\n        </div>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container } from '@material-ui/core'\nimport Dashboard from '../components/Dashboard'\nimport Map from '../components/Map'\nimport Page from '../components/Page'\n\nconst useStyles = makeStyles(theme => ({\n    map: {\n        height: '80vh',\n        maxWidth: '100vw',\n        marginBottom: theme.spacing(2),\n        position: 'relative',\n        '& .marker-cluster-medium': {\n            backgroundColor: 'rgba(110,204,57,0.2) !important'\n        },\n        '& .marker-cluster > div': {\n            backgroundColor: 'rgba(110,204,57,0.6) !important'\n        }\n    },\n}))\n\nexport default function Landing() {\n    const classes = useStyles()\n\n    return (\n        <Page container={false}>\n            <div className=\"map\">\n            {/* <CasesProvider cases={data.cases}> */}\n            {/* Map */}\n                <Map className={classes.map}/> \n            </div>\n            {/* Dashboard */}\n            <Container  maxWidth=\"xl\">\n                <Dashboard />\n            </Container>\n        </Page>\n    )\n}\n","import { React, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport { parse } from 'papaparse'\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        maxWidth: '600px',\n        marginTop: theme.spacing(2),\n        padding: theme.spacing(4),\n        borderRadius: theme.spacing(1),\n        border: \"2px dashed #838383\",\n        color: '#838383',\n        fontSize: '1rem',\n    },\n    highlight: {\n        backgroundColor: '#d2f8d2'\n    }\n\n}))\n\nexport default function DropZone(props) {\n    const classes = useStyles()\n    const [over, setOver] = useState(false)\n    const { className: styles, setDataEntries, setDataHeaders, ...other } = props\n\n    return (\n        <div \n            className={ styles ? over ? clsx(styles, classes.container, classes.highlight): clsx(styles, classes.container) : over ? clsx(classes.container, classes.highlight): classes.container }\n            {...other}\n            onDragEnter={e => {\n                e.preventDefault()\n                setOver(true)\n            }}\n            onDragLeave={e => {\n                e.preventDefault()\n                setOver(false)\n            }}\n            onDragOver={e => {\n                e.preventDefault()\n            }}\n            onDrop={ e => {\n                e.preventDefault()\n                setOver(false)\n                // Filter by type file, only allow text/csv\n                Array.from(e.dataTransfer.files)\n                    .filter(file => file.type === \"text/csv\")\n                    .forEach( async (file) => {\n                        const text = await file.text()\n                        const data = parse(text).data\n                        // console.log(\"[DropZone] Headers\")\n                        // console.log(data[0])\n                        setDataHeaders(data[0])\n                        // console.log(\"[DropZone] Dataset\")\n                        // console.log(data)\n                        data.shift()\n                        setDataEntries(data)\n\n                    })\n            }}\n            >\n            Arrastra un archivo csv con los casos que quieres cargar...\n        </div>\n    )\n}\n","import React from 'react'\nimport { TextField, InputLabel, makeStyles, useTheme } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    field: {\n        margin: `${theme.spacing(1)}px 0`,\n    },\n    label: {\n        color: theme.palette.text.main,\n        fontWeight: 'bold',\n        transition: 'all 0.3s ease',\n    },\n}))\n\nexport default function Input(props) {\n    const theme = useTheme()\n    const classes = useStyles()\n\n    const { label, labelTitle, className, required, ...other } = props\n\n    const onFieldFocus = e => {\n        const label = e.target.parentNode.parentNode.parentNode.childNodes[0]\n        label.style.color = theme.palette.primary.main\n    }\n\n    const onFieldBlur = e => {\n        const label = e.target.parentNode.parentNode.parentNode.childNodes[0]\n        label.style.color = theme.palette.text.primary\n    }\n\n    return (\n        <div className={className}>\n            {labelTitle ? (\n                required ? (\n                    <InputLabel className={classes.label}>{label}*</InputLabel>\n                ) : (\n                    <InputLabel className={classes.label}>{label}</InputLabel>\n                )\n            ) : null}\n            <TextField\n                variant=\"outlined\"\n                label={label}\n                className={classes.field}\n                onFocus={onFieldFocus}\n                onBlur={onFieldBlur}\n                {...other}\n            />\n        </div>\n    )\n}\n","import React from 'react'\nimport {\n    FormControl,\n    FormLabel,\n    RadioGroup as MuiRadioGroup,\n    FormControlLabel,\n    makeStyles,\n} from '@material-ui/core'\nimport { Radio } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: `${theme.spacing(1)}px 0`,\n    },\n    label: {\n        color: theme.palette.text.main,\n        fontWeight: 'bold',\n    },\n}))\n\nfunction RadioGroup(props) {\n    const classes = useStyles()\n\n    const {\n        label,\n        name,\n        value,\n        onChange,\n        items,\n        labelTitle,\n        required,\n        ...other\n    } = props\n\n    return (\n        <FormControl {...other}>\n            {labelTitle ? (\n                required ? (\n                    <FormLabel className={classes.label}>{label}*</FormLabel>\n                ) : (\n                    <FormLabel className={classes.label}>{label}</FormLabel>\n                )\n            ) : null}\n            <MuiRadioGroup row name={name} value={value} onChange={onChange}>\n                {items.map((item, i) => (\n                    <FormControlLabel\n                        value={item.value}\n                        label={item.label}\n                        control={<Radio />}\n                        key={i}\n                    />\n                ))}\n            </MuiRadioGroup>\n        </FormControl>\n    )\n}\n\nexport default RadioGroup\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    FormControl,\n    InputLabel,\n    Select as MuiSelect,\n    MenuItem,\n    makeStyles,\n    useTheme,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    field: {\n        margin: `${theme.spacing(1)}px 0`,\n        width: '100%',\n    },\n    label: {\n        color: theme.palette.text.main,\n        fontWeight: 'bold',\n        transition: 'all 0.3s ease',\n    },\n}))\n\nfunction Select(props) {\n    const classes = useStyles()\n    const theme = useTheme()\n\n    const {\n        name,\n        label,\n        labelTitle,\n        value,\n        onChange,\n        options,\n        className,\n        required,\n        ...other\n    } = props\n\n    const onOpenSelect = e => {\n        const label = document.querySelectorAll(`#${name}-select-label`)[0]\n        label.style.color = theme.palette.primary.main\n    }\n\n    const onCloseSelect = e => {\n        const label = document.querySelectorAll(`#${name}-select-label`)[0]\n        label.style.color = theme.palette.text.primary\n    }\n\n    return (\n        <div className={className}>\n            {labelTitle ? (\n                required ? (\n                    <InputLabel\n                        id={`${name}-select-label`}\n                        className={classes.label}\n                    >\n                        {label}*\n                    </InputLabel>\n                ) : (\n                    <InputLabel\n                        id={`${name}-select-label`}\n                        className={classes.label}\n                    >\n                        {label}\n                    </InputLabel>\n                )\n            ) : null}\n\n            <FormControl\n                variant=\"outlined\"\n                className={classes.field}\n                {...other}\n            >\n                <InputLabel>{label}</InputLabel>\n                <MuiSelect\n                    name={name}\n                    label={label}\n                    value={value}\n                    onChange={onChange}\n                    onOpen={onOpenSelect}\n                    onClose={onCloseSelect}\n                >\n                    <MenuItem value=\"\">None</MenuItem>\n                    {options.map((opt, i) => (\n                        <MenuItem key={i} value={opt.value}>\n                            {opt.label}\n                        </MenuItem>\n                    ))}\n                </MuiSelect>\n            </FormControl>\n        </div>\n    )\n}\n\nSelect.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.array,\n}\n\nexport default Select\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    Checkbox as MuiCheckbox,\n    FormControl,\n    Typography,\n    makeStyles,\n} from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexDirection: 'row',\n        '&  p': {\n            alignItems: 'center',\n            display: 'flex',\n        },\n    },\n}))\n\nfunction Checkbox(props) {\n    const classes = useStyles()\n\n    const { name, checked, msg, onChange, className, ...other } = props\n\n    const converToDefEventParam = (name, value) => ({\n        target: {\n            name,\n            value,\n        },\n    })\n\n    return (\n        <div className={className}>\n            <FormControl\n                component=\"fieldset\"\n                variant=\"outlined\"\n                className={classes.root}\n                {...other}\n            >\n                <MuiCheckbox\n                    name={name}\n                    checked={checked}\n                    onChange={e =>\n                        onChange(converToDefEventParam(name, e.target.checked))\n                    }\n                />\n                <Typography>{msg}</Typography>\n            </FormControl>\n        </div>\n    )\n}\n\nCheckbox.propTypes = {\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n}\n\nexport default Checkbox\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core'\n\nfunction CheckboxGroup(props) {\n\n    const { label, onChange, options} = props\n\n    const converToDefEventParam = (name, value) => ({\n        target: {\n            name, \n            value\n        }\n    })\n\n    return (\n        <div>\n            <FormControl component=\"fieldset\" variant=\"outlined\">\n                <FormLabel component=\"legend\">{label}</FormLabel>\n                <FormGroup>\n                    {options.map( (opt, i) => (\n                            <FormControlLabel\n                                control={ <Checkbox name={opt.name} value={opt.value} onChange={e => onChange(converToDefEventParam(name, e.target.checked))} />}\n                                label={opt.label}\n                                key={i}\n                            />\n                    ))}\n                </FormGroup>\n            </FormControl>\n        </div>\n    )\n}\n\nCheckboxGroup.propTypes = {\n    label: PropTypes.string,\n    onChange: PropTypes.func,\n    options: PropTypes.array\n}\n\nexport default CheckboxGroup\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n    MuiPickersUtilsProvider,\n    KeyboardDatePicker,\n} from '@material-ui/pickers'\nimport DateFnsUtils from '@date-io/date-fns'\n\nfunction DatePicker(props) {\n\n    const { name, label, value, onChange, ...other } = props\n\n    const converToDefEventParam = (name, value) => ({\n        target: {\n            name, \n            value\n        }\n    })\n\n    return (\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                inputVariant=\"outlined\"\n                format=\"dd/mm/yyyy\"\n                margin=\"normal\"\n                name={name}\n                label={label}\n                value={value}\n                onChange={date => onChange(converToDefEventParam(name, date))}\n                {...other}\n            />\n        </MuiPickersUtilsProvider>\n    )\n}\n\nDatePicker.propTypes = {\n    name: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func\n}\n\nexport default DatePicker\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Button as MuiButton } from '@material-ui/core'\nimport { steps } from \"../../Steps\";\nimport Joyride from \"react-joyride\";\n\nfunction Button(props) {\n\n    const { text, size, color, variant, onClick, ...other } = props\n\n    if(text == 'INFORMA SOBRE TU CASO'){\n        return (\n            <span className = \"report\">\n                <MuiButton\n                    size={size||\"large\"}\n                    color={color||\"primary\"}\n                    variant={variant||\"contained\"}\n                    onClick={onClick}\n                    {...other}\n                >\n                    <div>\n                        {text}\n                    </div>\n                </MuiButton>\n            </span>\n        )\n    }\n\n    return (\n        <MuiButton\n            size={size||\"large\"}\n            color={color||\"primary\"}\n            variant={variant||\"contained\"}\n            onClick={onClick}\n            {...other}\n        >\n            {text}\n        </MuiButton>\n    )\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    size: PropTypes.string,\n    color: PropTypes.string,\n    variant: PropTypes.string,\n    onClick: PropTypes.func, \n    other: PropTypes.object\n}\n\nexport default Button\n","import Input from './Input'\nimport RadioGroup from './RadioGroup'\nimport Select from './Select'\nimport Checkbox from './Checkbox'\nimport CheckboxGroup from './CheckboxGroup'\nimport DatePicker from './DatePicker'\nimport Button from './Button'\n\nconst Controls = {\n    Input,\n    RadioGroup,\n    Select,\n    Checkbox,\n    CheckboxGroup,\n    DatePicker,\n    Button,\n}\n\nexport default Controls\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n}))\n\n\nexport default function DenseTable(props) {\n  const { headers, dataset } = props\n  const classes = useStyles()\n\n  return (\n    <TableContainer component=\"div\">\n      <Table sx={{ minWidth: 650 }} size=\"small\" aria-label=\"a dense table\">\n        <TableHead>\n          <TableRow>\n            {headers.map((header,i) => {\n                return (\n                    <TableCell align='left' key={\"cell-\" + i}>{header}</TableCell>\n                )\n            })}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            {dataset.map((set,i) => {\n                return(\n                    <TableRow\n                        key={headers[i] + \"-row-\" + i}\n                        sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                    >\n                        {set.map((d, i) => <TableCell component=\"th\" key={headers[i] + \"-d\" + i}>{d.slice(0,16) + \"...\"}</TableCell>)}\n\n                    </TableRow>   \n                )\n            })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}","import { gql } from '@apollo/client'\n\nexport const REPORT = gql`\n    mutation report($data: ReportCaseCreateInput!) {\n        report(data: $data) {\n            companyName\n            caseType\n            description\n            region\n            profession\n            gender\n            ageRange\n        }\n    }\n`\n\nexport const RESTART = gql`\n    mutation restart {\n        restart {\n            connected\n        }\n    }\n`\n","import { gql } from '@apollo/client'\n\n\nexport const USERS = gql`\n\nquery users($filter: String){\n    users(filter: $filter ) {\n      email\n    }\n}\n`\n\nexport const ADD_USER = gql`\n    mutation addUser($data: UserCreateInput!) {\n        add(data: $data) {\n            id\n            email\n            terms\n            region\n            profession\n            gender\n        }\n    }\n`\nexport const DELETE_USERS = gql`\n    mutation deleteUsers {\n        deleteUsers \n    }\n`","import React, {useState, useEffect } from 'react'\nimport useReport from './useReport'\nimport { regionRenderNameToValue, typeRenderNameToValue, genderRenderNameToValue, professionRenderNameToValue, ageRangeRenderNameToValue, experienceRenderNameToValue } from '../helpers/general-helpers';\n\nexport default function useBulkReport() {\n    const [ data, setData ] = useState()\n    const [ loading, setLoading ] = useState()\n    const [ error, setError ] = useState()\n\n    const [ reportsState, setReportsState ] = useState()\n    const [ casesToReport, setCasesToReport ] = useState() \n    const [ currentReportIndex, setCurrentReportIndex ] = useState()\n    const [ lastReportIndex, setLastReportIndex ] = useState() \n    const [ reportCase, {data: currentData, loading: currentLoading, error: currentError} ] = useReport()\n\n    const bulkReport = (inputCasesToReport) => {\n        // console.log(\"[useBulkReport] Starting bulk report...\")\n        \n        // Bulk report starts, set loading state\n        setLoading(true)\n        // Restart index\n        setCurrentReportIndex(0)\n        // Initialize reports state array\n        setReportsState(Array(inputCasesToReport.length))\n        // Set last index\n        setLastReportIndex(inputCasesToReport.length)\n        // Store cases to report\n        setCasesToReport(inputCasesToReport)\n\n        // Bootstrap, report first case\n        const caseToReport = {\n            companyName: inputCasesToReport[0][0],\n            caseType: typeRenderNameToValue(inputCasesToReport[0][1]),\n            description: inputCasesToReport[0][2],\n            profession: professionRenderNameToValue(inputCasesToReport[0][3]),\n            gender: genderRenderNameToValue(inputCasesToReport[0][4]),\n            region: regionRenderNameToValue(inputCasesToReport[0][5]),\n            experience: experienceRenderNameToValue(inputCasesToReport[0][6]),\n            ageRange: ageRangeRenderNameToValue(inputCasesToReport[0][7]),\n            terms: !!inputCasesToReport[0][8],\n            email: inputCasesToReport[0][9]\n        }\n        reportCase(caseToReport)\n    } \n\n    useEffect(() => {\n\n        if(currentError) {\n            console.log(\"[useBulkReport] Error: \")\n            console.log(currentError)\n            setError(currentError)\n            return\n        }\n        if(currentLoading) {\n            return\n        }\n        if(currentData && !currentLoading) {\n\n            console.log(`[useBulkReport] Case ${currentReportIndex+1} reported: `)\n            console.log(currentData)\n\n            // Update state \n            let nextState = reportsState\n            nextState[currentReportIndex] = true\n            setReportsState(nextState)\n\n            setData({reportsState, casesToReport})\n            \n            if(currentReportIndex+1 < lastReportIndex){\n                // console.log(\"[useBulkReport] Reporting next case...\")\n                setCurrentReportIndex(index => index+1)\n                \n                const caseToReport = {\n                    companyName: casesToReport[currentReportIndex+1][0],\n                    caseType: typeRenderNameToValue(casesToReport[currentReportIndex+1][1]),\n                    description: casesToReport[currentReportIndex+1][2],\n                    profession: professionRenderNameToValue(casesToReport[currentReportIndex+1][3]),\n                    gender: genderRenderNameToValue(casesToReport[currentReportIndex+1][4]),\n                    region: regionRenderNameToValue(casesToReport[currentReportIndex+1][5]),\n                    experience: experienceRenderNameToValue(casesToReport[currentReportIndex+1][6]),\n                    ageRange: ageRangeRenderNameToValue(casesToReport[currentReportIndex+1][7]),\n                    terms: !!casesToReport[currentReportIndex+1][8],\n                    email: casesToReport[currentReportIndex+1][9]\n                }\n                reportCase(caseToReport)\n            } else if(currentReportIndex+1 == lastReportIndex) {\n                // Bulk report finished\n                setLoading(false)\n            }\n            return\n        }\n        \n    }, [currentData, currentLoading, currentError]) \n\n    return [bulkReport, {data, loading, error}]\n}\n","import { useState, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { REPORT } from '../services/cases_backend/queries'\nimport { ADD_USER } from '../services/users/queries'\n\nexport default function useReport() {\n    const [ data, setData ] = useState()\n    const [ loading, setLoading ] = useState()\n    const [ error, setError ] = useState()\n\n    const [ sendReport, { data: caseReported, loading: caseLoading, error: caseError } ] = useMutation(REPORT)\n    const [ addUser, { data: addedUser, loading: userLoading, error: userError }] = useMutation(ADD_USER)\n\n    const reportCase = (caseToReport) => {\n\n        if(caseToReport.terms){\n            // console.log(\"[useReport] Creating user...\")\n            let user = {\n                email: caseToReport.email,\n                terms: caseToReport.terms,\n                region: caseToReport.region,\n                profession: caseToReport.profession,\n                gender: caseToReport.gender,\n            }\n            try {\n                addUser({ variables: { data: user } })\n            }\n            catch(error){ \n                console.log(error)\n            }\n        }\n\n        // console.log(\"[useReport] Reporting case...\")\n        let reportCase = {\n            companyName: caseToReport.companyName,\n            caseType: caseToReport.caseType,\n            description: caseToReport.description,\n            region: caseToReport.region,\n            profession: caseToReport.profession,\n            gender: caseToReport.gender,\n            ageRange: caseToReport.ageRange,\n            experience: caseToReport.experience,\n        }\n        try {\n            sendReport({ variables: { data: reportCase } })\n        }\n        catch(error){ \n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        if(caseError) {\n            // console.log(\"[useRestart] Case restart error: \")\n            // console.log(caseError)\n            setError(caseError)\n        }\n        if(userError) {\n            // console.log(\"[useRestart] Users restart error: \")\n            // console.log(userError)\n            setError(userError)\n        }\n        if(caseLoading || userLoading) {\n            setLoading(caseLoading || userLoading)\n        }\n        if(caseReported) {\n            // console.log(\"[useReport] Reported case: \")\n            // console.log(caseReported)\n            setData(_data => ({\n                ..._data,\n                caseReported\n            }))\n        }\n        if(addedUser) {\n            // console.log(\"[useReport] Created user: \")\n            // console.log(addedUser)\n            setData(_data => ({\n                ..._data,\n                addedUser\n            }))\n        }\n        if(caseReported && addedUser) {\n            setLoading(false)\n        }\n    }, [caseReported, addedUser, caseLoading, userLoading, caseError, userError]) \n\n    return [ reportCase, {data,loading,error} ]\n}\n","import { React, useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Grid, DataGrid, Typography, Icon } from '@material-ui/core'\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Page from '../components/Page'\nimport { CasesProvider } from '../providers/CasesProvider/provider'\nimport DropZone from '../components/DropZone'\nimport Controls from '../components/Shared/controls/Controls'\nimport clsx from 'clsx'\nimport DenseTable from '../components/DenseTable'\nimport { Warning, Check, Error } from '@material-ui/icons'\nimport useRestart from '../hooks/useRestart'\nimport useBulkReport from '../hooks/useBulkReport'\n\nconst useStyles = makeStyles(theme => ({\n    mainGrid: {\n        marginTop: '2rem',\n    },\n    formButton: {\n        display: 'block',\n        boxShadow: 'none',\n        borderRadius: 0,\n        color: theme.palette.text.light,\n    },\n    flexVerticalAlignCenter: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    mb: {\n        marginBottom: theme.spacing(2)\n    },\n    mt: {\n        marginTop: theme.spacing(2)\n    },\n    loadingSpinner: {\n        color: theme.palette.primary.main,\n        display: 'grid',\n        gridAutoFlow: 'column',\n        alignItems: 'center',\n        justifyItems: 'center',\n        margin: '7rem auto 0rem',\n    },\n    loadingSpinnerBulkReport: {\n        color: theme.palette.secondary.main,\n        display: 'inline-block',\n        margin: '0 2rem',\n    },\n    loadingText1: {\n        color: theme.palette.primary.main,\n        fontSize: '2rem',\n        fontWeight: '400',\n        padding: '2rem 0 0rem',\n        margin: '2rem 0 0rem',\n        textAlign:'center',\n       \n    },\n    loadingText2: {\n        color: theme.palette.primary.main,\n        fontSize: '1rem',\n        fontWeight: '400',\n        padding: '0rem 0 2rem',\n        margin: '1rem 0 2rem',\n        textAlign:'center',\n    },\n    loadingText3: {\n        color: theme.palette.secondary.main,\n        fontSize: '1.5rem',\n        fontWeight: '400',\n        textAlign:'center',\n        display: 'inline-block',\n    },\n    flexColumn:{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    }\n}))\n\nexport default function Admin() {\n    const classes = useStyles()\n    const [ cases, setCases ] = useState(null)\n    const [ bulkReportUsed, setBulkReportUsed ] = useState(false)\n    const [ casesHeaders, setCasesHeaders ] = useState([])\n    const [ restartPrototype, {data: restartData, loading: restartLoading, error: restartError} ] = useRestart()\n    const [ bulkReport , {data, loading, error} ] = useBulkReport()\n\n    // console.log(\"[Admin] Cases loaded from drop zone: \")\n    // console.log(cases)\n\n    const getCasesWithReportState = () => {\n        let casesWithState = []\n        cases.map((c,i) => {\n            if(data){\n                casesWithState.push(data.reportsState[i] ? ['✅'].concat(c) : ['🔄'].concat(c))\n            }else {\n                casesWithState.push([' '].concat(c))\n            }\n        })\n        return casesWithState\n    }\n\n    const getCasesHeadersWithReportState = () => {\n        // console.log(\"[setHeaders] Headers:\")\n        // console.log([\"Estado\"].concat(casesHeaders))\n        return [\"Estado\"].concat(casesHeaders)\n    }\n\n    useEffect(() => {\n        if(loading){\n            // console.log(\"[Admin] Bulk report in progress...\")\n        }\n        if(error){\n            // console.log(\"[Admin] Bulk report error:\")\n            // console.log(error)\n        }\n        if(data){\n            // console.log(\"[Admin] Update:\")\n            // console.log(data)\n        }\n    }, [data, loading, error])\n    \n\n    if (restartLoading) return (\n        //<Box position=\"relative\" display=\"inline-flex\">\n        <Page container={false}>\n            <Grid item  lg={12} className = {classes.flexColumn}>\n                <CircularProgress size={44} color=\"inherit\"  className = {classes.loadingSpinner}/>  \n                <Typography className={classes.loadingText1}>\n                    Reiniciando...                                    \n                </Typography>\n                <Typography className={classes.loadingText2}>\n                    Este proceso puede tardar unos segundos...                                    \n                </Typography>               \n            </Grid> \n        </Page>\n    )\n\n    if (restartError) {\n        console.log(restartError)\n        return (\n            <Page container={false}>\n                <Grid item  lg={12} className = {classes.flexColumn}>\n                    <Typography className={classes.loadingText1}>\n                        Error!                                    \n                    </Typography>\n                    <Typography className={classes.loadingText2}>\n                        {restartError}                                    \n                    </Typography> \n                </Grid>  \n            </Page>\n        )\n    }\n\n    return (\n        <Page container={false}>\n            <CasesProvider>\n                <Container  maxWidth=\"xl\">\n                    <Grid container spacing={2} className={classes.mainGrid}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h1\" align='center'>Administrar prototipo</Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h2\" className={classes.mb} >Carga múltiple de casos</Typography>\n                            <Typography variant=\"body1\" className={classes.mb} >Arrastra un documento en formato csv. El documento (normalmente exportado desde una hoja de cálculo) debe contener una primera fila con las siguientes etiquetas de columna: companyName, caseType, description, region, profession, gender, ageRange, experience, terms, email. El resto de filas serán los datos correspondientes a cada una de las entradas a reportar.</Typography>\n                            <DropZone setDataEntries={setCases} setDataHeaders={setCasesHeaders} className={classes.mb} />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h2\" className={classes.mb} ><Warning /> Reiniciar prototipo</Typography>\n                            <Typography variant=\"body1\" className={classes.mb} > Se eliminarán todos los casos del contrato, se reiniciarán estadísticas y se limpiará la base de datos de usuarios de contacto.</Typography>\n                            <Controls.Button \n                                type=\"submit\"\n                                text=\"REINICIAR\"\n                                onClick={restartPrototype}\n                                className={clsx(classes.mb,classes.formButton)}\n                            />\n                            { restartData ? (\n                                    <Typography variant=\"body1\" className={classes.mb}>\n                                        Reiniciado: {restartData.restartedUsers && restartData.restartedCases ? <Check /> : <Error />}                                   \n                                    </Typography> \n                                ) : null\n                            }\n                        </Grid>\n                        {cases === null ? null : ( \n                            <>\n                                <Grid item xs={4} className={classes.flexVerticalAlignCenter}>\n                                    <Controls.Button \n                                        type=\"submit\"\n                                        text=\"CARGA MÚLTIPLE\"\n                                        onClick={() => {\n                                            setBulkReportUsed(true)\n                                            bulkReport(cases)\n                                        }}\n                                        className={clsx(classes.formButton)}\n                                    />\n                                </Grid>\n                                { loading ? (\n                                    <Grid item xs={8} className={classes.flexVerticalAlignCenter}>\n                                        <CircularProgress size={44} color=\"inherit\"  className = {classes.loadingSpinnerBulkReport}/>  \n                                        <Typography className={classes.loadingText3}>\n                                            Carga en curso, este proceso puede tardar varios minutos...                                    \n                                        </Typography>\n                                    </Grid>\n                                ) : ( bulkReportUsed ? \n                                    (\n                                        <Grid item xs={8} className={classes.flexVerticalAlignCenter}>\n                                            <Typography variant=\"body1\">\n                                                Carga completada: { error ? <Error /> : <Check /> }                                   \n                                            </Typography>\n                                        </Grid> \n                                    ) : null\n                                )}\n\n                                <Grid item xs={12} className={classes.mt}>\n                                    <DenseTable headers={getCasesHeadersWithReportState()} dataset={getCasesWithReportState()} /> \n                                </Grid>\n                            </>\n                        )}\n                    </Grid>\n                </Container>\n            </CasesProvider>\n        </Page>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { RESTART as RESTART_CASES } from '../services/cases_backend/queries'\nimport { DELETE_USERS as RESTART_USERS } from '../services/users/queries'\n\nexport default function useRestart() {\n    const [ data, setData ] = useState()\n    const [ loading, setLoading ] = useState()\n    const [ error, setError ] = useState()\n\n    const [ sendRestartCases, { data: restartedCases, loading: caseLoading, error: caseError } ] = useMutation(RESTART_CASES)\n    const [ sendRestartUsers, { data: restartedUsers, loading: userLoading, error: userError } ] = useMutation(RESTART_USERS)\n\n    const restartContract = () => {\n\n        // console.log(\"[useRestart] Restarting database\")\n        try {\n            sendRestartUsers()\n        }\n        catch(error){ \n            console.log(error)\n        }\n\n        // console.log(\"[useRestart] Restarting contract\")\n        try {\n            sendRestartCases()\n        }\n        catch(error){ \n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        if(caseError) {\n            // console.log(\"[useRestart] Case restart error: \")\n            // console.log(caseError)\n            setError(caseError)\n        }\n        if(userError) {\n            // console.log(\"[useRestart] Users restart error: \")\n            // console.log(userError)\n            setError(userError)\n        }\n        if(caseLoading) {\n            setLoading(true)\n        }\n        if(userLoading) {\n            setLoading(true)\n        }\n        if(restartedCases) {\n            // console.log(\"[useRestart] Restarted cases: \")\n            // console.log(restartedCases)\n            setData(_data => ({\n                ..._data,\n                restartedCases: restartedCases.restart.connected\n            }))\n        }\n        if(restartedUsers) {\n            // console.log(\"[useRestart] Restarted users: \")\n            // console.log(restartedUsers)\n            setData(_data => ({\n                ..._data,\n                restartedUsers: restartedUsers.deleteUsers\n            }))\n        }\n        if(restartedUsers && restartedCases){\n            // console.log(\"[useRestart] Restarted completed: \")\n            // console.log(data)\n            setLoading(false)\n        }\n    }, [restartedCases, caseLoading, caseError, restartedUsers, userLoading, userError]) \n\n    return [ restartContract, {data,loading,error} ]\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Grid, Typography } from '@material-ui/core'\nimport Page from '../components/Page'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: theme.palette.primary.main,\n        fontSize: '3rem',\n        fontWeight: '700',\n        padding: '4rem 0 2rem',\n    },\n    caption: {\n        fontSize: '1.25rem',\n    },\n    grid: {\n        marginBottom: '6rem',\n    }\n}))\n\nexport default function Info() {\n    const classes = useStyles()\n\n    return (\n        <Page container={false}>\n            <Container maxWidth=\"xl\">\n                <Grid container className={classes.grid}>\n                    <Grid item lg={6}>\n                        <Typography variant=\"h2\" className={classes.title}>\n                            ¿Qué es?\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.caption}>\n                            El Observatorio de la Precariedad en el Sector Cultural es una <b>iniciativa del grupo de investigación del proyecto P2P Models</b> de la Universidad Complutense de Madrid. El proyecto <b>nace como respuesta a la situación precaria que afecta el sector cultural español</b>, el cual se ha visto gravemente afectado por los continuos recortes en el sector público. Aunque genera el 3,7% del PIB total, el sector cultural y artístico solamente recibe alrededor del 0,43% de la financiación de la Administración Pública española. En este contexto, lxs trabajadorxs culturales luchan cada vez más por sobrevivir a la crisis económica. \n                        </Typography>\n                        <Typography variant=\"h2\" className={classes.title}>\n                            ¿Qué hacemos?\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.caption}>\n                            El Observatorio está pensado como una <b>plataforma interactiva de visualización de datos</b> sobre las condiciones actuales de los trabajadores, y proporcionando más visibilidad a la problemática de la precariedad de los trabajadores culturales. Al mismo tiempo, la plataforma <b>permite a lxs usuarixs crear redes</b> entre ellxs y llegar a entidades de ayuda tras hacer pública su denuncia. Además, a través de los datos proporcionados por lxs usuarixs, la plataforma tiene el objetivo de visibilizar las diferencias salariales en función del género, la ubicación y el tipo de profesión. Idealmente, esto puede servir a la elaboración de reivindicaciones políticas en torno a la precariedad. \n                        </Typography>\n                        <Typography variant=\"h2\" className={classes.title}>\n                            ¿Por qué blockchain?\n                        </Typography>\n                        <Typography variant=\"body1\" className={classes.caption}>\n                            El Observatorio busca proteger la privacidad de los denunciantes y el uso de sus datos personales por medio de la plataforma también utiliza la tecnología blockchain para almacenar las denuncias buscando de esta manera evitar potenciales censuras al contenido (contrariamente a lo que sucede en todas las plataformas centralizadas, como Instagram y Twitter, en que el control del contenido siempre queda en manos de los dueños). Mediante el empleo de blockchain, estamos devolviendo a lxs usuarixs el control sobre el contenido que publican.\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Page>\n    )\n}\n","import { React, useState } from 'react'\nimport {\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n    Button,\n} from '@material-ui/core'\n\nfunction InfoDialog(props) {\n    const { open, title, contentText, closeButtonText, onClose } = props\n    // const [open, setOpen] = useState(true)\n\n    const handleClose = cb => {\n        cb()\n        // setOpen(false)\n    }\n\n    return (\n        <Dialog\n            open={open}\n            onClose={onClose}\n            // onClose={handleClose(onClose)}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {contentText}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={onClose} color=\"primary\" autoFocus>\n                    {/* <Button onClick={handleClose} color=\"primary\" autoFocus> */}\n                    {closeButtonText}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default InfoDialog\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Box } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    caption: {\n        fontSize: '1rem',\n        display: 'inline-block',\n    },\n    value: {\n        fontSize: '4rem',\n        display: 'inline-block',\n        color: theme.palette.primary.main,\n        marginRight: '0.5rem',\n    },\n    container: {\n        maxWidth: '6rem',\n        marginRight: '2rem',\n        color: theme.palette.primary.main,\n    },\n}))\n\nexport default function DisplayValue(props) {\n    const classes = useStyles()\n    const { value, caption } = props\n    return (\n        <>\n            <Typography variant=\"body1\" className={classes.value}>\n                {value}\n            </Typography>\n            <Box className={classes.container}>\n                <Typography variant=\"body1\" className={classes.caption}>\n                    {caption}\n                </Typography>\n            </Box>\n        </>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Box } from '@material-ui/core'\nimport Markunread from '@mui/icons-material/Markunread'\n\nconst useStyles = makeStyles(theme => ({\n    anchor: { display: 'inline-block' },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    icon: {\n        display: 'inline-block',\n        marginRight: '1rem',\n        height: '3rem !important',\n        width: '3rem !important',\n    },\n    caption: {\n        fontSize: '1.25rem',\n        display: 'inline-block',\n        color: theme.palette.text.main,\n        textDecoration: 'underline',\n    },\n}))\n\nexport default function EmailContact(props) {\n    const classes = useStyles()\n    const { label, email, ...other } = props\n    return (\n        <a href={`mailto:${email}`} className={classes.anchor} {...other}>\n            <Box className={classes.container}>\n                <Markunread className={classes.icon} color=\"info\" />\n                <Typography variant=\"body1\" className={classes.caption}>\n                    {label}\n                </Typography>\n            </Box>\n        </a>\n    )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, Box } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    anchor: { display: 'inline-block' },\n    container: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    imgContainer: {\n        marginBottom: '1rem',\n        height: '8rem',\n        width: '100%',\n    },\n    img: {\n        objectFit: 'contain',\n        height: '10rem',\n        width: '10rem',\n        padding: '1rem 0 2rem',\n    },\n    caption: {\n        fontSize: '1.25rem',\n        display: 'inline-block',\n        color: theme.palette.text.main,\n        textDecoration: 'underline',\n    },\n}))\n\nexport default function EntityContact(props) {\n    const classes = useStyles()\n    const { src, label, url, className: styleClass, ...other } = props\n    return (\n        <a href={url} className={clsx(classes.anchor, styleClass)} {...other}>\n            <Box className={classes.container}>\n                <Box className={classes.imgContainer}>\n                    <img className={classes.img} src={src} />\n                </Box>\n                <Typography variant=\"body1\" className={classes.caption}>\n                    {label}\n                </Typography>\n            </Box>\n        </a>\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Container, Grid, Typography, Box } from '@material-ui/core'\nimport Check from '@mui/icons-material/Check'\nimport Page from '../components/Page'\nimport { Link as RouterLink } from 'react-router-dom'\nimport InfoDialog from '../components/Shared/InfoDialog'\nimport DisplayValue from '../components/Shared/DisplayValue'\nimport EmailContact from '../components/Shared/EmailContact'\nimport EntityContact from '../components/Shared/EntityContact'\nimport Controls from '../components/Shared/controls/Controls'\nimport { useQuery } from '@apollo/client'\nimport { GET_FILTERED_CASES } from '../services/cases_subgraph/queries'\nimport { USERS } from '../services/users/queries'\nimport { GoogleSpreadsheet } from \"google-spreadsheet\";\nimport {\n    professionToProfessionRenderName,\n    regionToRegionRenderName,\n} from '../data/config.json'\nimport useCases from '../providers/CasesProvider/use'\nimport { setQuarter } from 'date-fns'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: theme.palette.primary.main,\n        fontSize: '3rem',\n        fontWeight: '700',\n        padding: '4rem 0 2rem',\n    },\n    heading2: {\n        color: theme.palette.primary.main,\n        fontSize: '2rem',\n        fontWeight: '700',\n        padding: '2rem 0 2rem',\n    },\n    heading3: {\n        color: theme.palette.secondary.main,\n        fontSize: '1.5rem',\n        fontWeight: '700',\n        padding: '2rem 3rem 1rem',\n    },\n    icon: {\n        display: 'inline-block',\n        marginRight: '1rem',\n        height: '3rem !important',\n        width: '3rem !important',\n    },\n    caption: {\n        fontSize: '1.25rem',\n        display: 'inline-block',\n    },\n    captionOrg: {\n        fontSize: '1.25rem',\n        display: 'inline-block',\n        padding: '2rem 3rem 1rem',\n    },\n    smallCaption: {\n        fontSize: '18px',\n        display: 'inline-block',\n        marginBottom: '1rem',\n    },\n    grid: {\n        marginBottom: '6rem',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    successMsgContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '0.5rem',\n    },\n    numbersContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: '2rem',\n    },\n    contactList: {\n        listStyle: 'none',\n    },\n    entity: {\n        marginLeft: '2rem',\n    },\n    formButton: {\n        boxShadow: 'none',\n        borderRadius: 0,\n        color: theme.palette.text.light,\n        marginTop: '3rem',\n        marginLeft: '78%',\n    },\n}))\n\n//export default function Confirmation(props) {\nconst Confirmation = (props) => {\n    const classes = useStyles()\n    const { refetch: refetchCases } = useCases()\n    const { report } = props.location.state\n    const [filas, setRows] = useState([])    \n\n\n    // Config variables\n    // const SPREADSHEET_ID = process.env.REACT_APP_SPREADSHEET_ID\n    const CLIENT_EMAIL =  process.env.REACT_APP_CLIENT_EMAIL\n    const PRIVATE_KEY = process.env.REACT_APP_PRIVATE_KEY\n    \n    const doc = new GoogleSpreadsheet('1w2J9DuzFHkUmBQ0zHHY51gPY7NRzmbdUV_VckSfhbSA')\n\n    useEffect(() => {\n        const readSpreadsheet = async () => {\n            try {\n                await doc.useServiceAccountAuth({\n                client_email: CLIENT_EMAIL,\n                private_key:PRIVATE_KEY ,\n            });\n                // loads document properties and worksheets\n                await doc.loadInfo();\n        \n                //const sheet = doc.sheetsById[SHEET_ID]\n                const sheet = doc.sheetsByIndex[0]\n                const rows = await sheet.getRows()\n                setRows(rows);\n        \n            } catch (e) {\n                console.error('Error: ', e)\n            }\n            };\n        readSpreadsheet();\n    } , []) \n\n\n    const regionQueryFilter = {\n        region: report[0].region,\n    }\n    const professionQueryFilter = {\n        profession: report[0].profession,\n    }\n\n    const emailQueryFilter = {\n        email: report[1],\n    }\n    \n    const usersQueryFilter = {\n        OR: [\n                {\n                    region: report[0].region\n                },\n                {\n                    profession: report[0].profession\n                },\n                {\n                    email: report[1]\n                }\n            ]\n    }\n\n    const {\n        data: casesByRegion,\n        loading: loadingCasesByRegion,\n        error: errorCasesByRegion,\n    } = useQuery(GET_FILTERED_CASES, {\n        variables: {\n            filter: regionQueryFilter,\n        },\n    })\n\n    const {\n        data: casesByProfession,\n        loading: loadingCasesByProfession,\n        error: errorCasesByProfession,\n    } = useQuery(GET_FILTERED_CASES, {\n        variables: {\n            filter: professionQueryFilter,\n        },\n    })\n\n    const {\n        data: dataUsers,\n        loading: loadingUsers,\n        error: errorUsers,\n    } = useQuery(USERS, {\n        variables: {\n            filter: JSON.stringify(usersQueryFilter),\n        },\n    })\n\n    if (loadingCasesByRegion || loadingCasesByProfession || loadingUsers)\n        return <Typography>Cargando datos de tu interés...</Typography>\n    if (errorCasesByRegion || errorCasesByProfession || errorUsers)\n        return (\n            <InfoDialog\n                title=\"Error\"\n                contentText={\n                    errorCasesByRegion\n                        ? errorCasesByRegion.message\n                        : ( errorCasesByProfession \n                            ? errorCasesByProfession.message:\n                            errorUsers.message )\n                }\n                closeButtonText=\"Cerrar\"\n            />\n        )\n    const datos = filas?.map((entity, i) => (\n        <EntityContact\n            label={entity.nombre_entidad}\n            url={entity.url}\n            src={entity.url_imagen}\n            className={classes.entity}\n        />\n      ));\n\n    console.log(\"Filas\")\n    console.log(filas)\n    const orgsCiudad = filas?.filter((entity) => (entity.comunidad_autonoma).includes(report[0].region) || (entity.comunidad_autonoma) == (\"Todas\" || \"Internacional\"))\n    const orgsProfesion = filas?.filter((entity) => (entity.profesion_es).includes(report[0].profession) )\n    const userMails = dataUsers.users.filter((u) => (u.email != report[1])) \n\n    return ( \n        <Page container={false}>\n            <Container maxWidth=\"xl\">\n                <Grid container className={classes.grid}>\n                    <Grid item lg={8}>\n                        <Typography variant=\"h2\" className={classes.title}>\n                            ¡Gracias!\n                        </Typography>\n                        <Box className={classes.successMsgContainer}>\n                            <Check className={classes.icon} color=\"success\" />\n                            <Typography\n                                variant=\"body1\"\n                                className={classes.caption}\n                            >\n                                Tu información se ha guardado correctamente. <br /> <strong>Cuando vuelvas a la página principal recuerda recargar para ver tu caso en el mapa.</strong>\n                            </Typography>\n                        </Box>\n\n                        <Typography\n                            variant=\"body1\"\n                            className={classes.smallCaption}\n                        >\n                            Aquí tienes una serie de recursos que consideramos\n                            podrían serte útiles\n                        </Typography>\n                        <Box className={classes.numbersContainer}>\n                            <DisplayValue\n                                value={casesByProfession.cases.length}\n                                caption={`casos de \n                                ${\n                                    professionToProfessionRenderName[\n                                        report[0].profession\n                                    ]\n                                }`}\n                            />\n                            <DisplayValue\n                                value={casesByRegion.cases.length}\n                                caption={`casos de \n                                ${regionToRegionRenderName[report[0].region]}`}\n                            />\n                        </Box>\n                        <Typography variant=\"h3\" className={classes.heading2}>\n                            Personas de contacto en tu ciudad o tu profesión\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            className={classes.smallCaption}\n                        >\n                            Estas personas han sufrido el mismo tipo de abuso\n                            por parte de sus pagadores que tu, tal vez podáis\n                            poneros en contacto y daros algún tipo de consejo.\n                            Ha autorizado a dar su email así que ¡no te cortes!\n                        </Typography>\n                        <ul className={classes.contactList}>\n                \n                            {(userMails.length>0) ? (\n                                userMails.slice(0,5).map((u, i) => (\n                                    <li>\n                                        <EmailContact\n                                            label={`Persona ${i + 1}`}\n                                            email={u.email}\n                                            key={`contacto-${i + 1}`}\n                                        />\n                                    </li>\n                                )                                )\n                            ) :(\n                                <Typography variant=\"subtitle\"  className={classes.captionOrg}>\n                                    No tenemos emails para ti actualmente\n                                </Typography>\n                                \n                            )}\n                        </ul>\n                        \n                        <Typography variant=\"h3\" className={classes.heading2}>\n                            Colectivos o entidades que podrían ayudarte \n                        </Typography>\n                        <Typography variant=\"h5\" className={classes.heading3}>\n                            En tu ciudad\n                        </Typography>\n                        {(orgsCiudad.length>0) ? (\n                            orgsCiudad.map((entity, i) => (\n                                <EntityContact\n                                    label={entity.nombre_entidad}\n                                    url={entity.url}\n                                    src={entity.url_imagen}\n                                    className={classes.entity}\n                                />\n                            ))\n                        ) :(\n                            <Typography variant=\"subtitle\"  className={classes.captionOrg}>\n                                No tenemos organizaciones registradas en tu Comunidad Autónoma, pero si encuentras alguna contáctanos\n                            </Typography>\n                        )}\n\n                            \n                        <Typography variant=\"h5\" className={classes.heading3}>\n                            Relacionados con tu profesión\n                        </Typography>\n                        \n                        {(orgsProfesion.length>0) ? (\n                            orgsProfesion.map((entity, i) => (\n                                <EntityContact\n                                    label={entity.nombre_entidad}\n                                    url={entity.url}\n                                    src={entity.url_imagen}\n                                    className={classes.entity}\n                                />\n                            ))\n                        ) :(\n                            <Typography variant=\"subtitle\"  className={classes.captionOrg}>\n                                No tenemos organizaciones registradas relacionadas con tu profesión, pero si encuentras alguna contáctanos\n                            </Typography>\n                            \n                        )}\n\n                        <Controls.Button\n                            text=\"VOLVER AL INICIO\"\n                            {...{\n                                to: '/',\n                                component: RouterLink,\n                            }}\n                            onClick={refetchCases}\n                            className={classes.formButton}\n                        />\n                            \n                    </Grid>\n                </Grid>\n            </Container>\n        </Page>\n    )\n}\n\nexport default  Confirmation;\n\n","import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\n\nexport function useForm(initialFValues) {\n    const [values, setValues] = useState(initialFValues)\n\n    const handleInputChange = e => {\n        const { name, value } = e.target\n        setValues({\n            ...values,\n            [name]: value,\n        })\n    }\n\n    const submit = (e, queryFcn, payload) => e => {\n        e.preventDefault()\n        // Triger mutation\n        try {\n            queryFcn(payload)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    return {\n        values,\n        setValues,\n        handleInputChange,\n        submit,\n    }\n}\n\nexport function Form(props) {\n    const { onSubmit, children, ...other } = props\n    return (\n        <form onSubmit={onSubmit} {...other}>\n            {children}\n        </form>\n    )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography, IconButton, Dialog, DialogTitle as MuiDialogTitle, DialogContent, DialogContentText, DialogActions, Button, Slide } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    dialogContent: {\n      padding: `0 ${theme.spacing(2)}px ${theme.spacing(2)}px`,\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1.5),\n      color: theme.palette.grey[500],\n    },\n}))\n\n  \nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide {...props} direction=\"down\" timeout={500} ref={ref} />\n})\n\nconst DialogTitle = ((props) => {\n    const { root, closeButton } = useStyles()\n    const { children, classes, onClose, ...other } = props;\n    return (\n      <MuiDialogTitle disableTypography className={root} {...other}>\n        <Typography variant=\"h6\">{children}</Typography>\n        {onClose ? (\n          <IconButton aria-label=\"close\" className={closeButton} onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        ) : null}\n      </MuiDialogTitle>\n    );\n});\n\nfunction ActionDialog(props) {\n  const { dialogContent } = useStyles()\n  \n  const { \n    open,\n    title, \n    contentText = false, \n    content = false, \n    primaryActionButton = false, \n    primaryActionHandler = undefined, \n    secondaryActionButton = false, \n    secondaryActionHandler  = undefined , \n    onClose } = props\n  \n  return (\n      <Dialog\n          open={open}\n          onClose={onClose}\n          TransitionComponent={Transition}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n          disableScrollLock={ true }\n      >\n          <DialogTitle id=\"alert-dialog-title\" onClose={onClose}>{title}</DialogTitle>\n          <DialogContent className={dialogContent}>\n              {!contentText && content ?\n                  content \n                  : \n                  <DialogContentText id=\"alert-dialog-description\">\n                      {(contentText && !content ? contentText : \"Default text\")}\n                  </DialogContentText>   \n              }\n          </DialogContent>\n          { primaryActionButton || secondaryActionButton ?\n            <DialogActions>\n                { secondaryActionButton ? \n                    <Button onClick={secondaryActionHandler} color=\"secondary\" autoFocus>\n                        {secondaryActionButton}\n                    </Button>\n                    : '' \n                }\n                { primaryActionButton ?\n                  <Button onClick={primaryActionHandler} color=\"primary\" autoFocus>\n                      {primaryActionButton}\n                  </Button>\n                  : '' \n                }\n            </DialogActions>\n            : ''\n          }\n      </Dialog>\n  )\n}\n\nexport default ActionDialog\n","import React from 'react'\nimport clsx from 'clsx'\nimport { Box, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core'\n\nconst steps = ['Datos sobre la empresa', 'Sobre ti']\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        backgroundColor: 'transparent',\n    },\n}))\n\nexport default function HorizontalStepper({ activeStep, className, ...other }) {\n    const classes = useStyles()\n\n    return (\n        <Stepper\n            activeStep={activeStep}\n            className={clsx(classes.container, className)}\n            {...other}\n        >\n            {steps.map(label => (\n                <Step key={label}>\n                    <StepLabel>{label}</StepLabel>\n                </Step>\n            ))}\n        </Stepper>\n    )\n}\n","import { React } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, Typography } from '@material-ui/core'\nimport Controls from './Shared/controls/Controls'\nimport { categories, typeToTypeRenderName } from '../data/config.json'\nimport { createOptionsObjectFromArrays } from '../helpers/general-helpers'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: theme.palette.primary.main,\n        fontSize: '2.25rem',\n        fontWeight: '700',\n        marginBottom: theme.spacing(1),\n    },\n    requiredAdvice: {\n        fontSize: '0.75rem',\n        marginBottom: theme.spacing(1),\n    },\n    field: {\n        marginTop: '2rem',\n    },\n    note: {\n        marginLeft: '2rem',\n        maxWidth: '500px',\n    },\n    description: (values) => ({\n        marginBottom: '3rem',\n        position: 'relative',\n        '&:after': {\n            content: `'${values.description.length == 0 ? '150 - 500' : values.description.length + '/500'}'`,\n            color: theme.palette.text.secondary,\n            display: 'block',\n            position: 'absolute',\n            bottom: '-1rem',\n            right: 0,\n        },\n    }),\n    spacer: {\n        width: '52%',\n    },\n}))\n\nexport default function ReportCaseFormPart1({ values, handleInputChange }) {\n    const classes = useStyles(values)\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={12}>\n                <Typography variant=\"h3\" className={classes.title}>\n                    Datos sobre la empresa\n                </Typography>\n                <Typography variant=\"h6\" className={classes.requiredAdvice}>\n                    Los campos con asterisco son obligatorios\n                </Typography>\n                <Controls.Input\n                    name=\"companyName\"\n                    label=\"Nombre de la empresa\"\n                    placeholder=\"Nombre de la empresa\"\n                    value={values.companyName}\n                    onChange={handleInputChange}\n                    className={classes.field}\n                    required\n                    labelTitle\n                />\n                <div className={classes.spacer} />\n                <Controls.RadioGroup\n                    name=\"caseType\"\n                    label=\"Tipo de caso\"\n                    items={createOptionsObjectFromArrays(categories.types, typeToTypeRenderName)}\n                    value={values.caseType}\n                    onChange={handleInputChange}\n                    className={classes.field}\n                    labelTitle\n                    required\n                />\n                <Typography className={classes.note}>\n                    Entendemos por maltrato cosas como: racaneos en los precios,\n                    mensajes de whatsapp a todas horas, presión, malas maneras,\n                    falsas promesas de visibilidad… y cualquier cosa que te\n                    produzca ansiedad.\n                </Typography>\n                <Controls.Input\n                    name=\"description\"\n                    label=\"Explícanos brevemente tu caso\"\n                    placeholder=\"Descibe aquí lo que te ha pasado. Mínimo 150 caracteres.\"\n                    value={values.description}\n                    onChange={handleInputChange}\n                    className={clsx(classes.field, classes.description)}\n                    required\n                    multiline\n                    rows=\"6\"\n                    inputProps={{ maxLength: 500 }}\n                    fullWidth\n                    labelTitle\n                />\n            </Grid>\n        </Grid>\n    )\n}\n","import { React } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Grid, Typography } from '@material-ui/core'\nimport Controls from './Shared/controls/Controls'\nimport {\n    categories,\n    regionToRegionRenderName,\n    professionToProfessionRenderName,\n    genderToGenderRenderName,\n    ageRangeToAgeRangeRenderName,\n    experienceToExperienceRenderName,\n} from '../data/config.json'\nimport { createOptionsObjectFromArrays } from '../helpers/general-helpers'\n\nconst useStyles = makeStyles(theme => ({\n    row: {\n        paddingTop: '0 !important',\n        paddingBottom: '0 !important',\n    },\n    title: {\n        color: theme.palette.primary.main,\n        fontSize: '2.25rem',\n        fontWeight: '700',\n        marginBottom: theme.spacing(1),\n    },\n    smallField: {\n        width: '35%',\n        display: 'inline-block',\n        marginRight: '30%',\n        '&:last-child': {\n            marginRight: 0,\n        },\n    },\n    field: {\n        marginTop: '2rem',\n    },\n    w100: {\n        width: '100%',\n    },\n    spacer: {\n        width: '52%',\n    },\n}))\n\nexport default function ReportCaseFormPart2({ values, handleInputChange }) {\n    const classes = useStyles()\n\n    return (\n        <Grid container spacing={1}>\n            <Grid item xs={8} className={classes.row}>\n                <Typography variant=\"h3\" className={classes.title}>\n                    Datos sobre ti\n                </Typography>\n                <Typography variant=\"h6\">\n                    Los campos con asterisco son obligatorios\n                </Typography>\n                <Controls.Select\n                    name=\"region\"\n                    label=\"Provincia\"\n                    options={createOptionsObjectFromArrays(\n                            categories.regions,\n                            regionToRegionRenderName\n                        ).sort((a, b) => a.label.localeCompare(b.label))\n                    }\n                    value={values.region}\n                    onChange={handleInputChange}\n                    className={clsx(classes.field, classes.smallField)}\n                    labelTitle\n                    required\n                />\n                <div className={classes.spacer} />\n                <Controls.Select\n                    name=\"profession\"\n                    label=\"Profesión\"\n                    options={createOptionsObjectFromArrays(\n                        categories.professions,\n                        professionToProfessionRenderName\n                    )}\n                    value={values.profession}\n                    onChange={handleInputChange}\n                    className={clsx(classes.field, classes.smallField)}\n                    labelTitle\n                    required\n                />\n                <div className={classes.spacer} />\n                <Controls.RadioGroup\n                    name=\"gender\"\n                    label=\"Género\"\n                    items={createOptionsObjectFromArrays(\n                        categories.genders,\n                        genderToGenderRenderName\n                    )}\n                    value={values.gender}\n                    onChange={handleInputChange}\n                    className={clsx(classes.field, classes.w100)}\n                    labelTitle\n                    required\n                />\n            </Grid>\n            <Grid item xs={8} className={classes.row}>\n                <Controls.Select\n                    name=\"ageRange\"\n                    label=\"Rango de edad\"\n                    options={createOptionsObjectFromArrays(\n                        categories.ageRanges,\n                        ageRangeToAgeRangeRenderName\n                    )}\n                    value={values.ageRange}\n                    onChange={handleInputChange}\n                    className={clsx(classes.field, classes.smallField)}\n                    labelTitle\n                    required\n                />\n                <Controls.Select\n                    name=\"experience\"\n                    label=\"Experiencia\"\n                    options={createOptionsObjectFromArrays(\n                        categories.experiences,\n                        experienceToExperienceRenderName\n                    )}\n                    value={values.experience}\n                    onChange={handleInputChange}\n                    className={clsx(classes.field, classes.smallField)}\n                    labelTitle\n                    required\n                />\n            </Grid>\n            <Grid item xs={8} className={classes.row}>\n                <Controls.Checkbox\n                    name=\"terms\"\n                    checked={values.authContact}\n                    msg=\"Autorizo a que la plataforma me ponga en contacto con personas en mi misma situación\"\n                    onChange={handleInputChange}\n                    className={classes.field}\n                    required\n                />\n                <Controls.Input\n                    name=\"email\"\n                    label=\"Tu email\"\n                    placeholder=\"Tu email\"\n                    value={values.email}\n                    onChange={handleInputChange}\n                    className={classes.field}\n                    labelTitle\n                />\n                <div className={classes.spacer} />\n            </Grid>\n        </Grid>\n    )\n}\n","import React, {useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Box, Grid, Typography } from '@material-ui/core'\nimport { useMutation } from '@apollo/client'\nimport { Redirect } from 'react-router-dom'\nimport { useForm, Form } from './Shared/useForm'\nimport Controls from './Shared/controls/Controls'\nimport InfoDialog from './Shared/InfoDialog'\nimport ActionDialog from './Shared/ActionDialog'\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { REPORT } from '../services/cases_backend/queries'\nimport { ADD_USER } from '../services/users/queries'\nimport HorizontalStepper from './Shared/HorizontalStepper'\nimport ReportCaseFormPart1 from './ReportCaseFormPart1'\nimport ReportCaseFormPart2 from './ReportCaseFormPart2'\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: theme.palette.primary.main,\n        fontSize: '4rem',\n        fontWeight: '700',\n        padding: '4rem 0 2rem',\n    },\n    caption: {\n        fontSize: '1.25rem',\n    },\n    stepper: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n    },\n    formButton: {\n        boxShadow: 'none',\n        borderRadius: 0,\n        color: theme.palette.text.light,\n    },\n    buttonRow: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        marginBottom: '4rem',\n    },\n    loadingSpinner: {\n        color: theme.palette.primary.main,\n        display: 'grid',\n        gridAutoFlow: 'column',\n        alignItems: 'center',\n        justifyItems: 'center',\n        margin: '7rem auto 0rem',\n\n    },\n    loadingText1: {\n        color: theme.palette.primary.main,\n        fontSize: '2rem',\n        fontWeight: '400',\n        padding: '2rem 0 0rem',\n        margin: '2rem 0 0rem',\n        textAlign:'center',\n       \n    },\n    loadingText2: {\n        color: theme.palette.primary.main,\n        fontSize: '1rem',\n        fontWeight: '400',\n        padding: '0rem 0 2rem',\n        margin: '1rem 0 2rem',\n        textAlign:'center',\n    },\n    flexColumn:{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n    }\n\n}))\n\nconst initialFValues = {\n    companyName: '',\n    caseType: '',\n    description: '',\n    region: '',\n    profession: '',\n    gender: '',\n    ageRange: '',\n    experience: '',\n    terms: false,\n    email: '',\n}\n\nexport default function ReportCaseForm() {\n    const classes = useStyles()\n    \n    const [activeStep, setActiveStep] = useState(0)\n    const { values, handleInputChange, submit } = useForm(initialFValues)\n    const [sendReport, { data: reportedCase, loading: loadingCase, error: errorCase }] = useMutation(REPORT)\n    const [addUser, { data: addedUser, loading: loadingUser, error: errorUser }] = useMutation(ADD_USER)\n    const [showInfoDialog, setShowInfoDialog] = useState(false)\n    const [showConfirmationDialog, setShowConfirmationDialog] = useState(false)\n    const [infoDialogMsg, setInfoDialogMsg] = useState('')\n    const [infoDialogTitle, setInfoDialogTitle] = useState('')\n\n    const validatePart1 = event => {\n        event.preventDefault()\n        if (values.companyName == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes introducir un nombre de empresa.')\n        } else if (values.caseType == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes introducir un tipo de caso.')\n        } else if (values.description == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes introducir una descripción de tu caso.')\n        } else if (values.description.length < 150) {\n            setShowInfoDialog(true)\n            setInfoDialogMsg(\n                'Debes ampliar la descripción, el mínimo número de caracteres es 150.'\n            )\n        } else {\n            setActiveStep(1)\n        } \n    }\n\n    const validatePart2 = event => {\n\n        event.preventDefault()\n        if (values.region == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes seleccionar tu provicia.')\n        } else if (values.profession == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes seleccionar tu profesión.')\n        } else if (values.gender == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes marcar tu género.')\n        } else if (values.ageRange == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes seleccionar tu rango de edad.')\n        } else if (values.experience == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('Debes seleccionar tu nivel de experiencia.')\n        } else if (values.terms && values.email == '') {\n            setShowInfoDialog(true)\n            setInfoDialogMsg(\n                'Has autorizado que contactemos contigo pero no has especificado una dirección de correo.'\n            )\n        } else if (\n            values.terms &&\n            !values.email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/)\n        ) {\n            setShowInfoDialog(true)\n            setInfoDialogMsg('E-mail inválido.')\n        } else {\n            setShowConfirmationDialog(true)\n        }\n    }\n\n    const reportAction = () => {\n        // console.warn('Submiting after validation', values)\n        let user = {}\n        if(values.email !== ''){\n            user = {\n                email: values.email,\n                terms: values.terms,\n                region: values.region,\n                profession: values.profession,\n                gender: values.gender,\n            }\n        }\n\n        let reportCase = {\n            companyName: values.companyName,\n            caseType: values.caseType,\n            description: values.description,\n            region: values.region,\n            profession: values.profession,\n            gender: values.gender,\n            ageRange: values.ageRange,\n            experience: values.experience,\n        }\n        \n        try {\n            if(values.email !== ''){\n                // console.log(\"[ReportCaseForm] User: \")\n                // console.log(user)\n                addUser({ variables: { data: user } })\n            }\n            // console.log(\"[ReportCaseForm] Case: \")\n            // console.log(reportCase)\n            sendReport({ variables: { data: reportCase } })\n        }\n        catch(error){ \n            console.log(error)\n        }\n    }\n\n    const renderActiveStep = step => {\n        switch (step) {\n            case 0:\n                return (\n                    <>\n                        <ReportCaseFormPart1\n                            values={values}\n                            handleInputChange={handleInputChange}\n                        />\n                        <Grid container spacing={1} justify=\"flex-end\">\n                            <Grid item className={classes.buttonRow}>\n                                <Controls.Button\n                                    type=\"button\"\n                                    text=\"SIGUIENTE\"\n                                    onClick={validatePart1}\n                                    className={classes.formButton}\n                                />\n                                <InfoDialog \n                                    open={showInfoDialog}\n                                    title=\"Error en el formulario\"\n                                    contentText={infoDialogMsg}\n                                    closeButtonText=\"Cerrar\"\n                                    onClose={() => {\n                                        // Add js focus on field\n                                        setShowInfoDialog(false)\n                                    }}\n                                />\n                            </Grid>\n                        </Grid>\n                    </>\n                )\n\n            case 1:\n                return (\n                    <>\n                        <ReportCaseFormPart2\n                            values={values}\n                            handleInputChange={handleInputChange}\n                        />\n                        <Grid container spacing={1}>\n                            <Grid item xs={8} className={classes.buttonRow}>\n                                { !errorCase && !errorUser  ? (     \n                                        <Controls.Button\n                                            type=\"submit\"\n                                            text=\"FINALIZAR\"\n                                            onClick={validatePart2}\n                                            className={classes.formButton}\n                                            // disabled={!active}\n                                        />\n                                    ) : (\n                                        <Controls.Button\n                                            type=\"submit\"\n                                            text=\"REINTENTAR\"\n                                            onClick={validatePart2}\n                                            className={classes.formButton}\n                                        />\n                                )}\n                                <InfoDialog\n                                    open={showInfoDialog}\n                                    title={infoDialogTitle}\n                                    contentText={infoDialogMsg}\n                                    closeButtonText=\"Cerrar\"\n                                    onClose={() => {\n                                        // Add js focus on field\n                                        setShowInfoDialog(false)\n                                    }}\n                                />\n                                <ActionDialog \n                                    open={showConfirmationDialog}\n                                    title=\"¿Confirmas que quieres enviar tu caso?\"\n                                    contentText={'Tus datos serán almacenados de forma permanente sin posibilidad de ser editados.'}\n                                    primaryActionButton=\"Confirmar\"\n                                    primaryActionHandler={() => {\n                                        setShowConfirmationDialog(false)\n                                        reportAction()\n                                    }}\n                                    secondaryActionButton=\"Cerrar\"\n                                    secondaryActionHandler={() => setShowConfirmationDialog(false)}\n                                    closeButtonText=\"Confirmar\"\n                                    onClose={() => setShowConfirmationDialog(false)}\n                                />  \n                            </Grid>\n                        </Grid>\n                    </>\n                )\n        }\n    }\n\n    useEffect(() => {\n        if (errorUser) {\n            // console.log(errorUser)\n            setShowInfoDialog(true)\n            setInfoDialogTitle('Error al guardar tu contacto')\n            setInfoDialogMsg(errorUser.message)\n        }\n\n        if (errorCase) {\n            // console.log(errorCase)\n            setShowInfoDialog(true)\n            setInfoDialogTitle('Error registrar tu caso')\n            setInfoDialogMsg(errorCase.message)\n        }\n\n    }, [reportedCase, addedUser, errorUser, errorCase, loadingCase])\n\n    //  else {\n\n    if (loadingCase || loadingUser) {\n        // console.log(\"Loading...\")\n        return (\n            <Grid item  lg={12} className = {classes.flexColumn}>\n                <CircularProgress size={44} color=\"inherit\"  className = {classes.loadingSpinner}/>  \n                <Typography className={classes.loadingText1}>\n                    Estamos registrando tu denuncia.                                    \n                </Typography>\n                <Typography className={classes.loadingText2}>\n                    Este proceso puede tardar unos segundos...                                    \n                </Typography>     \n            </Grid>    \n        )\n    }\n    if(reportedCase && addedUser || reportedCase && values.email == ''){\n        // console.log(\"[ReportForm] Success!\")\n        return(\n            <Redirect\n                to={{\n                    pathname: '/confirmation',\n                    state: { report: [reportedCase.report,  addedUser ? addedUser.email : ''] },\n                }}\n            />\n        )\n    }\n\n    return(\n        <Grid item lg={6}>\n            <Typography variant=\"h2\" className={classes.title}>\n                Informa sobre tu caso\n            </Typography>\n            <Typography variant=\"body1\" className={classes.caption}>\n                La información es poder. Si has sufrido algún tipo\n                de abuso por parte de pagadores privados,\n                administración o algún otro tipo de entidad pública\n                o privada, déjanos un testimonio anónimo para ayudar\n                a otros/as compañeros/as de profesión.\n            </Typography>\n                    \n            <Box className={classes.root}>\n                <HorizontalStepper\n                    activeStep={activeStep}\n                    className={classes.stepper}\n                    />\n                <Form\n                    // onSubmit={submit(sendReport, { variables: { data: values } })}\n                    id=\"report-case-form\"\n                    >\n                    {renderActiveStep(activeStep)}\n                </Form>\n            </Box>\n        </Grid>\n    )\n    // }    \n\n}\n","import React from 'react'\n// import { makeStyles } from '@material-ui/core/styles'\nimport { Container, Grid } from '@material-ui/core'\nimport Page from '../components/Page'\nimport ReportCaseForm from '../components/ReportCaseForm'\n// import MetamaskButton from '../../components/MetamaskButton'\n\n// const useStyles = makeStyles(theme => ({\n//     flexItemEnd: {\n//         display: 'flex',\n//         justifyContent: 'flex-end',\n//         alignItems: 'flex-start',\n//     }\n// }))\n\nexport default function Report() {\n    // const classes = useStyles()\n\n    return (\n        <Page container={false}>\n            <Container maxWidth=\"xl\">\n                <Grid container>    \n                    <ReportCaseForm />\n                </Grid>\n            </Container>\n        </Page>\n\n        // {<Grid item xs={3} className={classes.flexItemEnd}>\n        //     <MetamaskButton />\n        // </Grid> }\n    )\n}\n","import React, { useState, useEffect } from 'react'\nimport {\n    AppBar,\n    Toolbar,\n    Box,\n    Button,\n    makeStyles,\n    IconButton,\n    Drawer,\n    Link,\n    MenuItem,\n    Container,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport { Link as RouterLink } from 'react-router-dom'\nimport useCases from '../../providers/CasesProvider/use'\nimport Controls from './controls/Controls'\nimport Title from '../Title'\n\nconst logoSrc = './assets/ico-logo.svg'\n\nconst headerMenuLinks = [\n    {\n        label: '¿QUÉ ES ESTO?',\n        href: '/info',\n    },\n    {\n        label: 'INFORMA SOBRE TU CASO',\n        href: '/report',\n        cta: true,\n    },\n]\n\nconst useStyles = makeStyles(theme => ({\n    header: {\n        border: 'none',\n        borderTop: `8px solid ${theme.palette.primary.main}`,\n        borderBottom: `1px solid ${theme.palette.text.secondary}`,\n        '@media (max-width: 900px)': {\n            paddingLeft: 0,\n        },\n        padding: '1rem 0',\n        minHeight: theme.mixins.toolbar.minHeight,\n        backgroundColor: 'white'\n    },\n    logoAndTitleContainer: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    logo: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        width: '150px',\n        height: '75px',\n        '& img': {\n            height: '100%',\n        },\n    },\n    logoButton: {\n        '&:hover': {\n            backgroundColor: 'transparent',\n        }\n    },\n    titleAndDescription: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        '& h1': {\n            color: theme.palette.primary.dark,\n        },\n        '& span': {\n            display: 'inline-block',\n            maxWidth: '400px',\n            color: theme.palette.primary.main,\n        },\n    },\n    menuButton: {\n        background: 'transparent',\n        color: theme.palette.primary.main,\n        fontWeight: 'bold',\n        boxShadow: 'none',\n        '&:hover': {\n            textDecoration: 'underline',\n            background: 'transparent',\n            color: theme.palette.primary.main,\n            boxShadow: 'none',\n        },\n        '&:first-child': {\n            marginLeft: '2rem'\n        }\n    },\n    callToAction: {\n        marginLeft: '2rem',\n        marginRight: '0.5rem', // To align, due to ::after element\n        background: theme.palette.primary.main,\n        color: theme.palette.text.light,\n        borderRadius: 0,\n        position: 'relative',\n        top: 0,\n        left: 0,\n        boxShadow: 'none',\n        textDecoration: 'none',\n        transition: 'all 0.3s ease',\n        '&:hover': {\n            top: '0.5rem',\n            left: '0.5rem',\n            background: theme.palette.primary.main,\n            boxShadow: 'none',\n        },\n        '&::after': {\n            content: '\"\"',\n            position: 'absolute',\n            top: '0.5rem',\n            left: '0.5rem',\n            width: '100%',\n            height: '100%',\n            background: 'transparent',\n            border: `3px solid ${theme.palette.primary.main}`,\n            boxShadow: 'none',\n            transition: 'all 0.3s ease',\n        },\n        '&:hover::after': {\n            top: '0px',\n            left: '0px',\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        minHeight: 'auto',\n    },\n    drawerContainer: {\n        padding: '20px 30px',\n    },\n}))\n\nexport default function Header() {\n    const {\n        header,\n        logoAndTitleContainer,\n        logo,\n        logoButton,\n        titleAndDescription,\n        menuButton,\n        callToAction,\n        toolbar,\n        drawerContainer,\n    } = useStyles()\n\n    const { refetch: refetchCases } = useCases()\n\n\n    const [state, setState] = useState({\n        mobileView: false,\n        drawerOpen: false,\n    })\n\n    const { mobileView, drawerOpen } = state\n\n    useEffect(() => {\n        const setResponsiveness = () => {\n            return window.innerWidth < 900\n                ? setState(prevState => ({ ...prevState, mobileView: true }))\n                : setState(prevState => ({ ...prevState, mobileView: false }))\n        }\n\n        setResponsiveness()\n\n        window.addEventListener('resize', () => setResponsiveness())\n\n        return () => {\n            window.removeEventListener('resize', () => setResponsiveness())\n        }\n    }, [])\n\n    const displayDesktop = () => {\n        return (\n            <Container maxWidth=\"xl\">\n                <Toolbar className={toolbar} disableGutters>\n                    <div className={logoAndTitleContainer}>\n                        {customLogo}\n                        {TitleAndDescription}\n                    </div>\n                    <div>{getMenuButtons()} </div>\n                </Toolbar>\n            </Container>\n        )\n    }\n\n    const displayMobile = () => {\n        const handleDrawerOpen = () =>\n            setState(prevState => ({ ...prevState, drawerOpen: true }))\n        const handleDrawerClose = () =>\n            setState(prevState => ({ ...prevState, drawerOpen: false }))\n\n        return (\n            <Toolbar>\n                <IconButton\n                    {...{\n                        edge: 'start',\n                        color: 'inherit',\n                        'aria-label': 'menu',\n                        'aria-haspopup': 'true',\n                        onClick: handleDrawerOpen,\n                    }}\n                >\n                    <MenuIcon />\n                </IconButton>\n\n                <Drawer\n                    {...{\n                        anchor: 'left',\n                        open: drawerOpen,\n                        onClose: handleDrawerClose,\n                    }}\n                >\n                    <div className= {drawerContainer} >{getDrawerChoices()}</div>\n                </Drawer>\n\n                <div>{customLogo}</div>\n            </Toolbar>\n        )\n    }\n\n    const getDrawerChoices = () => {\n        return headerMenuLinks.map(({ label, href }) => {\n            return (\n                <Link\n                    {...{\n                        component: RouterLink,\n                        to: href,\n                        color: 'inherit',\n                        style: { textDecoration: 'none' },\n                        key: label,\n                        className: menuButton,\n                    }}\n                >\n                    <MenuItem>{label}</MenuItem>\n                </Link>\n            )\n        })\n    }\n\n    const customLogo = (\n        <Button\n            className={logoButton}\n            {...{\n                to: '/',\n                component: RouterLink,\n            }}\n            onClick={refetchCases}\n        >   \n            <Box className={logo}>\n                <img src={logoSrc} />\n            </Box>\n        </Button>\n    )\n\n    const TitleAndDescription = (\n        <Box className={titleAndDescription}>\n            <Title variant=\"h1\">\n                Observatorio de la Precariedad en el Sector Cultural\n            </Title>\n            <span>\n                Contrainformación, autodefensa y apoyo mutuo laboral basados en\n                experiencias reales y anónimas. ¡Envíanos la tuya!{' '}\n            </span>\n        </Box>\n    )\n\n    const getMenuButtons = () => {\n        const mainMenu = headerMenuLinks.map(({ label, href, cta }, i) => {\n            return (\n                <Controls.Button\n                    {...{\n                        key: i,\n                        text: label,\n                        to: href,\n                        component: RouterLink,\n                        className: !!cta ? callToAction : menuButton,\n                    }}\n                >\n                    {label}\n                </Controls.Button>\n            )\n        })\n        return mainMenu\n    }\n\n    return (\n        <AppBar\n            className={header}\n            color=\"transparent\"\n            variant=\"outlined\"\n            position=\"absolute\"\n        >\n            {mobileView ? displayMobile() : displayDesktop()}\n        </AppBar>\n    )\n}\n","import React from 'react'\nimport clsx from 'clsx'\nimport Link from '@material-ui/core/Link'\nimport { Box, Typography, makeStyles, Container } from '@material-ui/core'\n\nconst useStyles = makeStyles(theme => ({\n    flexRow: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    flexRowPT: {\n        display: 'flex',\n        flexDirection: 'row',\n        paddingTop: '1rem',\n    },\n    flexCol: {\n        display: 'flex',\n        flexDirection: 'col',\n    },\n    footer: {\n        margin: '1rem auto',\n        backgroundColor: theme.palette.secondary.main,\n    },\n    footerContent: {\n        justifyContent: 'space-between',\n        height: '100px',\n        '& span': {\n            fontSize: '12px',\n        },\n    },\n    logos: {\n        maxWidth: '480px',\n        '& #smart': {\n            position: 'relative',\n            top: '-10%',\n            height: '120%',\n            padding: '0',\n        },\n        '& #p2pmod': {\n            padding: '1.5rem',\n        },\n        '& img': {\n            padding: '1rem',\n            height: '100%',\n            width: 'auto',\n            marginRight: '1rem',\n        },\n    },\n    info: {\n        justifyContent: 'flex-end',\n        color: theme.palette.text.light,\n        textAlign: 'right',\n        '& div': {\n            padding: '1rem 0.5rem',\n        },\n        '& a': {\n            color: theme.palette.text.light,\n            textDecoration: 'underline',\n        },\n    },\n    githubIcon: {\n        marginRight: '0.5rem',\n    },\n}))\n\nexport default function Footer() {\n    const {\n        flexRow,\n        flexRowPT,\n        flexCol,\n        footer,\n        footerContent,\n        logos,\n        info,\n        githubIcon,\n    } = useStyles()\n\n    return (\n        <div className={footer}>\n            <Container maxWidth=\"xl\" className={clsx(flexRow, footerContent)}>\n                <div className={clsx(flexRow, logos)}>\n                    <img id=\"smart\" src=\"./assets/smart-logo.png\" />\n                    <img id=\"p2pmod\" src=\"./assets/p2p-logo.svg\" />\n                    <img src=\"./assets/EU-logo.png\" />\n                    <img src=\"./assets/ERC_logo.png\" />\n                </div>\n                <Box className={clsx(flexRowPT, info)}>\n                    <Box className={flexCol}>\n                        <i className={githubIcon}>\n                            <img src=\"./assets/ico-github.svg\" />\n                        </i>\n                        <span>\n                            Follow us on{' '}\n                            <Link\n                                href=\"https://github.com/p2pmodels\"\n                                target=\"_blank\"\n                            >\n                                Github\n                            </Link>\n                        </span>\n                    </Box>\n                    <Box className={flexCol}>\n                        <span>Copyleft with credits</span>\n                    </Box>\n                    <Box className={flexCol}>\n                        <span>\n                            This site is licensed under a{' '}\n                            <Link\n                                href=\"https://creativecommons.org/licenses/by/4.0/\"\n                                target=\"_blank\"\n                            >\n                                Creative Commons Attribution 4.0 International\n                                License\n                            </Link>\n                            . <br />\n                            The{' '}\n                            <Link href=\"https://p2pmodels.eu\" target=\"_blank\">\n                                P2P Models\n                            </Link>{' '}\n                            project has been funded by a European Research\n                            Council Grant.\n                        </span>\n                    </Box>\n                </Box>\n            </Container>\n        </div>\n    )\n}\n","// Main color is red[500]\n\nexport const red = {\n    100: '#ffc2c8',\n    500: '#FF5769',\n    900: '#561314',\n}\n\nexport const grey = {\n    300: '#d8d8d8',\n    400: '#ACB0B3',\n    500: '#545454',\n    900: '#474955',\n}\n\nexport const green = {\n    500: '#32B056',\n}\n\nexport const white = {\n    0: '#fff',\n}\n","import { createMuiTheme } from '@material-ui/core/styles'\nimport { red, green, grey, white, greenBlue } from './colors'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            dark: red[900],\n            main: red[500],\n            light: red[100],\n        },\n        secondary: {\n            main: grey[900],\n        },\n        text: {\n            dark: grey[900],\n            main: grey[500],\n            light: white[0],\n            secondary: grey[400],\n        },\n        error: {\n            dark: red[900],\n            main: red[500],\n            light: red[100],\n        },\n        success: {\n            main: green[500],\n        },\n    },\n    typography: {\n        fontsize: '16px',\n        h1: {\n            fontSize: '1.5rem',\n            fontWeight: '800',\n        },\n        h2: {\n            fontSize: '1.4rem',\n            fontWeight: '500',\n        },\n        h3: {\n            fontSize: '1.25rem',\n            fontWeight: '400',\n        },\n        h4: {\n            fontSize: '1rem',\n            fontWeight: '400',\n        },\n        h5: {\n            fontSize: '1rem',\n            fontWeight: '400',\n        },\n        h6: {\n            fontSize: '1rem',\n            fontWeight: '400',\n        },\n    },\n    spacing: 16,\n    mixins: {\n        toolbar: {\n            minHeight: '116px',\n        },\n    },\n})\n\nexport default theme\n","import React, { useState }  from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Joyride, {  STATUS } from 'react-joyride';\n\nimport { steps } from \"./components/Steps\";\n\nimport './App.css'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport { AppStateProvider } from './providers/AppStateProvider/provider'\n\nimport { CasesProvider } from './providers/CasesProvider/provider'\n// import ApolloProviderAuth from './components/ApolloProviderAuth'\nimport BackendProvider from './components/BackendProvider'\nimport Landing from './pages/Landing'\nimport Admin from './pages/Admin'\nimport Info from './pages/Info'\nimport Confirmation from './pages/Confirmation'\nimport Report from './pages/Report'\n\nimport Header from './components/Shared/Header'\nimport Footer from './components/Shared/Footer'\n\nimport theme from './themes/smart'\n\n// import { ChainId, DAppProvider } from '@usedapp/core'\n\n// const dAppConfig = {\n//   readOnlyChainId: ChainId.Rinkeby,\n//   readOnlyUrls: {\n//     [ChainId.Rinkeby]: '',\n//   },\n//     supportedChains: [ChainId.Rinkeby],\n// }\n\n\n\n\n\nfunction App() {\n    const [notDone, setnotDone] = useState(true)\n    \n    //window.localStorage.setItem('notDone', true)\n    if(localStorage.getItem('notDone') == 'false'){\n        localStorage.setItem('notDone','false');\n    }\n    else {localStorage.setItem('notDone', 'true')}\n\n    return (\n    \n        <AppStateProvider>\n            <BackendProvider>\n                <CasesProvider>\n                    {/* <ApolloProviderAuth> */}\n                    {/* <DAppProvider config={dAppConfig}> */}\n                    <BrowserRouter>\n                        <ThemeProvider theme={theme}>\n                            <Header />\n                            <Switch>\n                                <Route exact path=\"/\">\n                                <div className=\"demo-wrapper\">\n                                    \n                                        <Joyride\n                                            continuous={true}  \n                                            //disableOverlay        \n                                            \n                                            callback={(data) => {\n                                                const { status } = data;\n\n                                                if ([STATUS.FINISHED].includes(status) || [STATUS.SKIPPED].includes(status)) {\n                                                    localStorage.setItem('notDone', 'false');\n                                                    setnotDone(false);\n                                                } \n                                                \n                                            }} \n                                            scrollToFirstStep={true} //el botoncito\n                                            showProgress={true}\n                                            showSkipButton={true}\n                                            run = {localStorage.getItem('notDone') == 'true' ? (true):(false)}\n                                            steps={steps}\n                                            styles={{\n                                                options: {\n                                                zIndex: 10000,\n                                                },\n                                                buttonClose: {\n                                                    display: 'none',\n                                                },\n                                            }}\n                                        />\n                                    \n                                    <Landing />\n                                </div>\n\n                                </Route>\n                                <Route exact path=\"/info\">\n                                    <Info />\n                                </Route>\n                                <Route exact path=\"/report\">\n                                    <Report />\n                                </Route>\n                                <Route\n                                    exact\n                                    path=\"/confirmation\"\n                                    render={props => (\n                                        <Confirmation {...props} />\n                                    )}\n                                />\n                                <Route exact path=\"/admin\">\n                                    <Admin />\n                                </Route>\n                            </Switch>\n                            <Footer />\n                        </ThemeProvider>\n                    </BrowserRouter>\n                    {/* </DAppProvider> */}\n                </CasesProvider>\n                {/* </ApolloProviderAuth> */}\n            </BackendProvider>\n        </AppStateProvider>\n    )\n\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry)\n                getFID(onPerfEntry)\n                getFCP(onPerfEntry)\n                getLCP(onPerfEntry)\n                getTTFB(onPerfEntry)\n            }\n        )\n    }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport '@fontsource/roboto'\nimport '@fontsource/roboto/300.css'\nimport '@fontsource/roboto/700.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}